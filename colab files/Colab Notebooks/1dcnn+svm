{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":25,"status":"ok","timestamp":1666706078544,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"},"user_tz":-120},"id":"I0d_OKw2E7V9","outputId":"4764ec91-2e68-4f40-b22f-e2724a6ca1a4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Tue Oct 25 13:54:37 2022       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   44C    P8     9W /  70W |      0MiB / 15109MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"]}],"source":["!nvidia-smi"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1666706078547,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"},"user_tz":-120},"id":"BYBg9RLuFRY4","outputId":"44a5b309-4524-487a-ddf2-889268230d0e"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n"," function ClickConnect(){\n","   btn = document.querySelector(\"colab-connect-button\")\n","   if (btn != null){\n","     console.log(\"Click colab-connect-button\"); \n","     btn.click() \n","     }\n","   \n","   btn = document.getElementById('ok')\n","   if (btn != null){\n","     console.log(\"Click reconnect\"); \n","     btn.click() \n","     }\n","  }\n","  \n","setInterval(ClickConnect,60000)\n"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Done.\n"]}],"source":["#@markdown <h3>← 输入了代码后运行以防止断开</h>\n","\n","\n","import IPython\n","from google.colab import output\n","\n","display(IPython.display.Javascript('''\n"," function ClickConnect(){\n","   btn = document.querySelector(\"colab-connect-button\")\n","   if (btn != null){\n","     console.log(\"Click colab-connect-button\"); \n","     btn.click() \n","     }\n","   \n","   btn = document.getElementById('ok')\n","   if (btn != null){\n","     console.log(\"Click reconnect\"); \n","     btn.click() \n","     }\n","  }\n","  \n","setInterval(ClickConnect,60000)\n","'''))\n","\n","print(\"Done.\")"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"mcKg28aYFlHO","executionInfo":{"status":"ok","timestamp":1666706107570,"user_tz":-120,"elapsed":29037,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"25586d77-e869-4c29-c647-9efdd5c03f7f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting optuna\n","  Downloading optuna-3.0.3-py3-none-any.whl (348 kB)\n","\u001b[K     |████████████████████████████████| 348 kB 28.2 MB/s \n","\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from optuna) (4.64.1)\n","Requirement already satisfied: sqlalchemy>=1.3.0 in /usr/local/lib/python3.7/dist-packages (from optuna) (1.4.41)\n","Requirement already satisfied: PyYAML in /usr/local/lib/python3.7/dist-packages (from optuna) (6.0)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from optuna) (21.3)\n","Collecting cmaes>=0.8.2\n","  Downloading cmaes-0.8.2-py3-none-any.whl (15 kB)\n","Collecting colorlog\n","  Downloading colorlog-6.7.0-py2.py3-none-any.whl (11 kB)\n","Collecting alembic>=1.5.0\n","  Downloading alembic-1.8.1-py3-none-any.whl (209 kB)\n","\u001b[K     |████████████████████████████████| 209 kB 49.3 MB/s \n","\u001b[?25hRequirement already satisfied: importlib-metadata<5.0.0 in /usr/local/lib/python3.7/dist-packages (from optuna) (4.13.0)\n","Requirement already satisfied: scipy<1.9.0,>=1.7.0 in /usr/local/lib/python3.7/dist-packages (from optuna) (1.7.3)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from optuna) (1.21.6)\n","Collecting cliff\n","  Downloading cliff-3.10.1-py3-none-any.whl (81 kB)\n","\u001b[K     |████████████████████████████████| 81 kB 10.5 MB/s \n","\u001b[?25hCollecting Mako\n","  Downloading Mako-1.2.3-py3-none-any.whl (78 kB)\n","\u001b[K     |████████████████████████████████| 78 kB 6.6 MB/s \n","\u001b[?25hRequirement already satisfied: importlib-resources in /usr/local/lib/python3.7/dist-packages (from alembic>=1.5.0->optuna) (5.10.0)\n","Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata<5.0.0->optuna) (4.1.1)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata<5.0.0->optuna) (3.9.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->optuna) (3.0.9)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.7/dist-packages (from sqlalchemy>=1.3.0->optuna) (1.1.3.post0)\n","Collecting pbr!=2.1.0,>=2.0.0\n","  Downloading pbr-5.11.0-py2.py3-none-any.whl (112 kB)\n","\u001b[K     |████████████████████████████████| 112 kB 54.0 MB/s \n","\u001b[?25hCollecting autopage>=0.4.0\n","  Downloading autopage-0.5.1-py3-none-any.whl (29 kB)\n","Collecting stevedore>=2.0.1\n","  Downloading stevedore-3.5.2-py3-none-any.whl (50 kB)\n","\u001b[K     |████████████████████████████████| 50 kB 7.1 MB/s \n","\u001b[?25hCollecting cmd2>=1.0.0\n","  Downloading cmd2-2.4.2-py3-none-any.whl (147 kB)\n","\u001b[K     |████████████████████████████████| 147 kB 32.8 MB/s \n","\u001b[?25hRequirement already satisfied: PrettyTable>=0.7.2 in /usr/local/lib/python3.7/dist-packages (from cliff->optuna) (3.4.1)\n","Requirement already satisfied: attrs>=16.3.0 in /usr/local/lib/python3.7/dist-packages (from cmd2>=1.0.0->cliff->optuna) (22.1.0)\n","Requirement already satisfied: wcwidth>=0.1.7 in /usr/local/lib/python3.7/dist-packages (from cmd2>=1.0.0->cliff->optuna) (0.2.5)\n","Collecting pyperclip>=1.6\n","  Downloading pyperclip-1.8.2.tar.gz (20 kB)\n","Requirement already satisfied: MarkupSafe>=0.9.2 in /usr/local/lib/python3.7/dist-packages (from Mako->alembic>=1.5.0->optuna) (2.0.1)\n","Building wheels for collected packages: pyperclip\n","  Building wheel for pyperclip (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyperclip: filename=pyperclip-1.8.2-py3-none-any.whl size=11137 sha256=4da9f1b6969302b35a06c78d5393b339a6225c55bbcdebd4c2e8eaf1f79b9b36\n","  Stored in directory: /root/.cache/pip/wheels/9f/18/84/8f69f8b08169c7bae2dde6bd7daf0c19fca8c8e500ee620a28\n","Successfully built pyperclip\n","Installing collected packages: pyperclip, pbr, stevedore, Mako, cmd2, autopage, colorlog, cmaes, cliff, alembic, optuna\n","Successfully installed Mako-1.2.3 alembic-1.8.1 autopage-0.5.1 cliff-3.10.1 cmaes-0.8.2 cmd2-2.4.2 colorlog-6.7.0 optuna-3.0.3 pbr-5.11.0 pyperclip-1.8.2 stevedore-3.5.2\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: ipywidgets in /usr/local/lib/python3.7/dist-packages (7.7.1)\n","Requirement already satisfied: ipython>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (7.9.0)\n","Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (0.2.0)\n","Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (3.0.3)\n","Requirement already satisfied: traitlets>=4.3.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (5.1.1)\n","Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (5.3.4)\n","Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets) (3.6.1)\n","Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets) (6.1.12)\n","Requirement already satisfied: tornado>=4.2 in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets) (5.1.1)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets) (2.6.1)\n","Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets) (4.8.0)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets) (4.4.2)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets) (0.7.5)\n","Requirement already satisfied: prompt-toolkit<2.1.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets) (2.0.10)\n","Requirement already satisfied: backcall in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets) (0.2.0)\n","Collecting jedi>=0.10\n","  Downloading jedi-0.18.1-py2.py3-none-any.whl (1.6 MB)\n","\u001b[K     |████████████████████████████████| 1.6 MB 15.2 MB/s \n","\u001b[?25hRequirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets) (57.4.0)\n","Requirement already satisfied: parso<0.9.0,>=0.8.0 in /usr/local/lib/python3.7/dist-packages (from jedi>=0.10->ipython>=4.0.0->ipywidgets) (0.8.3)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.1.0,>=2.0.0->ipython>=4.0.0->ipywidgets) (0.2.5)\n","Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.1.0,>=2.0.0->ipython>=4.0.0->ipywidgets) (1.15.0)\n","Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets) (5.5.0)\n","Requirement already satisfied: pyzmq>=17 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (23.2.1)\n","Requirement already satisfied: nbconvert in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (5.6.1)\n","Requirement already satisfied: jupyter-core>=4.4.0 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (4.11.1)\n","Requirement already satisfied: nbformat in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (5.7.0)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.11.3)\n","Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.13.3)\n","Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.8.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets) (2.8.2)\n","Requirement already satisfied: ptyprocess in /usr/local/lib/python3.7/dist-packages (from terminado>=0.8.1->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.7.0)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.0.1)\n","Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.4)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (5.0.1)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (1.5.0)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.7.1)\n","Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.6.0)\n","Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.8.4)\n","Requirement already satisfied: fastjsonschema in /usr/local/lib/python3.7/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (2.16.2)\n","Requirement already satisfied: importlib-metadata>=3.6 in /usr/local/lib/python3.7/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (4.13.0)\n","Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.7/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (4.3.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=3.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (3.9.0)\n","Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=3.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (4.1.1)\n","Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (22.1.0)\n","Requirement already satisfied: importlib-resources>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (5.10.0)\n","Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.18.1)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets) (0.5.1)\n","Installing collected packages: jedi\n","Successfully installed jedi-0.18.1\n","Enabling notebook extension jupyter-js-widgets/extension...\n","Paths used for configuration of notebook: \n","    \t/root/.jupyter/nbconfig/notebook.json\n","Paths used for configuration of notebook: \n","    \t\n","      - Validating: \u001b[32mOK\u001b[0m\n","Paths used for configuration of notebook: \n","    \t/root/.jupyter/nbconfig/notebook.json\n"]}],"source":["import torch\n","import os\n","import copy\n","import random\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","from pylab import rcParams\n","import matplotlib.pyplot as plt\n","from matplotlib import rc\n","import sklearn.datasets\n","from sklearn import preprocessing\n","from sklearn.model_selection import train_test_split, KFold\n","from sklearn.metrics import classification_report, accuracy_score, auc, f1_score, precision_score, recall_score, confusion_matrix, ConfusionMatrixDisplay\n","from sklearn.datasets import make_classification\n","from sklearn.svm import SVC\n","from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.neural_network import MLPClassifier\n","from sklearn.model_selection import GridSearchCV, RandomizedSearchCV, cross_val_score\n","\n","from torch import nn, optim\n","from torchsummary import summary\n","from torchvision import transforms\n","from torch.utils.data import TensorDataset, DataLoader, ConcatDataset\n","import torch.nn.functional as F\n","\n","!pip install optuna\n","import optuna\n","from optuna.trial import TrialState\n","\n","!pip install ipywidgets \n","# To enable `ipywidgets`\n","!jupyter nbextension enable --py widgetsnbextension\n","import plotly.graph_objs as go\n","from ipywidgets import interactive, VBox, widgets, interact\n","from IPython.display import display\n","\n","from google.colab import output\n","output.enable_custom_widget_manager()\n","\n","%matplotlib inline\n","%config InlineBackend.figure_format='retina'\n","\n","sns.set(style='whitegrid', palette='muted', font_scale=1.2)\n","\n","HAPPY_COLORS_PALETTE = [\"#01BEFE\", \"#FFDD00\", \"#FF7D00\", \"#FF006D\", \"#ADFF02\", \"#8F00FF\"]\n","\n","sns.set_palette(sns.color_palette(HAPPY_COLORS_PALETTE))\n","\n","rcParams['figure.figsize'] = 12, 8\n","\n","CLASS_NORMAL = 1\n","CLASS_LEFT = 0\n","class_names=['left', 'normal']\n","\n","id_to_class = {\n","    0.: \"Left\",\n","    1.: \"Normal\",\n","}\n","\n","class_to_id = {\n","    \"Left\": 0.,\n","    \"Normal\": 1.,\n","}\n","\n","device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","\n","RANDOM_SEED = 2022\n","def seed_everything(seed: int):\n","    random.seed(seed)\n","    np.random.seed(seed)\n","    torch.manual_seed(seed)\n","    if torch.cuda.is_available():\n","        torch.cuda.manual_seed(seed)\n","\n","seed_everything(RANDOM_SEED)"]},{"cell_type":"code","source":["class EarlyStopping:\n","  \"\"\"Early stops the training if validation loss doesn't improve after a given patience.\"\"\"\n","  def __init__(self, patience=7, verbose=False, delta=0, path='checkpoint.pt', trace_func=print):\n","    \"\"\"\n","    Args:\n","        patience (int): How long to wait after last time validation loss improved.\n","                        Default: 7\n","        verbose (bool): If True, prints a message for each validation loss improvement. \n","                        Default: False\n","        delta (float): Minimum change in the monitored quantity to qualify as an improvement.\n","                        Default: 0\n","        path (str): Path for the checkpoint to be saved to.\n","                        Default: 'checkpoint.pt'\n","        trace_func (function): trace print function.\n","                        Default: print            \n","    \"\"\"\n","    self.patience = patience\n","    self.verbose = verbose\n","    self.counter = 0\n","    self.best_score = None\n","    self.early_stop = False\n","    self.val_loss_min = np.Inf\n","    self.delta = delta\n","    self.path = path\n","    self.trace_func = trace_func\n","  def __call__(self, val_loss, model):\n","\n","    score = -val_loss\n","\n","    if self.best_score is None:\n","      self.best_score = score\n","      self.save_checkpoint(val_loss, model)\n","    elif score < self.best_score + self.delta:\n","      self.counter += 1\n","      self.trace_func(f'EarlyStopping counter: {self.counter} out of {self.patience}')\n","      if self.counter >= self.patience:\n","          self.early_stop = True\n","    else:\n","      self.best_score = score\n","      self.save_checkpoint(val_loss, model)\n","      self.counter = 0\n","\n","  def save_checkpoint(self, val_loss, model):\n","    '''Saves model when validation loss decrease.'''\n","    if self.verbose:\n","        self.trace_func(f'Validation loss decreased ({self.val_loss_min:.6f} --> {val_loss:.6f}).  Saving model ...')\n","    torch.save(model.state_dict(), self.path)\n","    self.val_loss_min = val_loss"],"metadata":{"id":"fJpZepOHJnav","executionInfo":{"status":"ok","timestamp":1666706107571,"user_tz":-120,"elapsed":19,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":682,"status":"ok","timestamp":1666706136618,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"},"user_tz":-120},"id":"FX_H8u6fFwbQ","outputId":"07049f35-70c9-4ff1-9014-3e54f5c4e99c"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/dataset/MA_1D_CYCLE\n"]}],"source":["os.chdir('drive/MyDrive/dataset/MA_1D_CYCLE')\n","print(os.getcwd())\n","real_005_path = 'dataset_real_005.csv'\n","real_010_path = 'dataset_real_010.csv'\n","real_015_path = 'dataset_real_015.csv'\n","real_020_path = 'dataset_real_020.csv'\n","real_025_path = 'dataset_real_025.csv'\n","real_N_path = 'dataset_real_N.csv'\n","\n","\n","fake_005_path = 'dataset_fake_005.csv'\n","fake_010_path = 'dataset_fake_010.csv'\n","fake_015_path = 'dataset_fake_015.csv'\n","fake_020_path = 'dataset_fake_020.csv'\n","fake_025_path = 'dataset_fake_025.csv'\n","fake_N_path = 'dataset_fake_N.csv'"]},{"cell_type":"code","source":["real_005_df = pd.read_csv(real_005_path, header=None)\n","real_010_df = pd.read_csv(real_010_path, header=None)\n","real_015_df = pd.read_csv(real_015_path, header=None)\n","real_020_df = pd.read_csv(real_020_path, header=None)\n","real_025_df = pd.read_csv(real_025_path, header=None)\n","real_N_df = pd.read_csv(real_N_path, header=None)"],"metadata":{"id":"wLhOLcKleDSb","executionInfo":{"status":"ok","timestamp":1666706146042,"user_tz":-120,"elapsed":6119,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# real_df = pd.concat([real_015_df, real_020_df, real_025_df, real_N_df],axis = 0, ignore_index= True)\n","real_df = pd.concat([real_005_df, real_010_df, real_015_df, real_020_df, real_025_df, real_N_df],axis = 0, ignore_index= True)\n","real_df.rename(columns={350: 'target'}, inplace=True)\n","\n","scaler_real = preprocessing.MinMaxScaler()\n","scaler_real.fit(real_df.iloc[:,:-1].T)\n","real_df.iloc[:,:-1] = scaler_real.transform(real_df.iloc[:,:-1].T).T\n","\n","real_df.reset_index(drop=True)\n","# plt.plot(real_df.iloc[0,:-1])\n","real_df = real_df.sample(frac=1.0)\n","real_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"UMY_QqXIeGCk","executionInfo":{"status":"ok","timestamp":1666706147017,"user_tz":-120,"elapsed":505,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"7763cc67-05cc-44dd-fa5d-7fe3ab70ecee"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           0         1         2         3         4         5         6  \\\n","68  0.873239  0.788732  0.816901  0.816901  0.788732  0.816901  0.830986   \n","7   0.625000  0.819444  0.916667  0.902778  0.888889  0.777778  0.805556   \n","62  0.888889  0.861111  0.791667  0.805556  0.805556  0.777778  0.805556   \n","36  0.486486  0.621622  0.797297  0.918919  0.932432  0.905405  0.810811   \n","6   0.791667  0.819444  0.777778  0.833333  0.833333  0.888889  0.875000   \n","..       ...       ...       ...       ...       ...       ...       ...   \n","24  0.932432  0.878378  0.770270  0.783784  0.797297  0.770270  0.824324   \n","18  0.891892  0.810811  0.797297  0.810811  0.783784  0.824324  0.824324   \n","55  0.519481  0.675325  0.883117  1.000000  0.935065  0.883117  0.766234   \n","49  0.594595  0.797297  0.932432  0.945946  0.918919  0.824324  0.810811   \n","45  0.480000  0.613333  0.813333  0.920000  0.933333  0.906667  0.826667   \n","\n","           7         8         9  ...       341       342       343       344  \\\n","68  0.901408  0.873239  0.887324  ...  0.183099  0.169014  0.169014  0.169014   \n","7   0.819444  0.763889  0.805556  ...  0.194444  0.166667  0.180556  0.166667   \n","62  0.833333  0.875000  0.861111  ...  0.194444  0.194444  0.180556  0.180556   \n","36  0.810811  0.824324  0.783784  ...  0.202703  0.189189  0.189189  0.189189   \n","6   0.875000  0.888889  0.875000  ...  0.180556  0.180556  0.166667  0.166667   \n","..       ...       ...       ...  ...       ...       ...       ...       ...   \n","24  0.851351  0.864865  0.878378  ...  0.189189  0.189189  0.189189  0.175676   \n","18  0.878378  0.878378  0.878378  ...  0.189189  0.175676  0.175676  0.162162   \n","55  0.779221  0.805195  0.766234  ...  0.207792  0.207792  0.207792  0.194805   \n","49  0.837838  0.797297  0.837838  ...  0.189189  0.175676  0.175676  0.162162   \n","45  0.826667  0.853333  0.800000  ...  0.226667  0.226667  0.213333  0.200000   \n","\n","         345       346       347       348       349  target  \n","68  0.169014  0.169014  0.154930  0.154930  0.154930       1  \n","7   0.166667  0.166667  0.166667  0.166667  0.152778       0  \n","62  0.166667  0.166667  0.166667  0.166667  0.166667       1  \n","36  0.175676  0.175676  0.162162  0.162162  0.162162       0  \n","6   0.166667  0.152778  0.152778  0.125000  0.125000       0  \n","..       ...       ...       ...       ...       ...     ...  \n","24  0.175676  0.175676  0.162162  0.162162  0.148649       0  \n","18  0.175676  0.162162  0.162162  0.148649  0.162162       0  \n","55  0.194805  0.181818  0.181818  0.168831  0.168831       0  \n","49  0.175676  0.162162  0.175676  0.148649  0.162162       0  \n","45  0.200000  0.200000  0.186667  0.186667  0.173333       0  \n","\n","[72 rows x 351 columns]"],"text/html":["\n","  <div id=\"df-355cc3de-b789-4b32-a55b-67a0a3435440\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>341</th>\n","      <th>342</th>\n","      <th>343</th>\n","      <th>344</th>\n","      <th>345</th>\n","      <th>346</th>\n","      <th>347</th>\n","      <th>348</th>\n","      <th>349</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>68</th>\n","      <td>0.873239</td>\n","      <td>0.788732</td>\n","      <td>0.816901</td>\n","      <td>0.816901</td>\n","      <td>0.788732</td>\n","      <td>0.816901</td>\n","      <td>0.830986</td>\n","      <td>0.901408</td>\n","      <td>0.873239</td>\n","      <td>0.887324</td>\n","      <td>...</td>\n","      <td>0.183099</td>\n","      <td>0.169014</td>\n","      <td>0.169014</td>\n","      <td>0.169014</td>\n","      <td>0.169014</td>\n","      <td>0.169014</td>\n","      <td>0.154930</td>\n","      <td>0.154930</td>\n","      <td>0.154930</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.625000</td>\n","      <td>0.819444</td>\n","      <td>0.916667</td>\n","      <td>0.902778</td>\n","      <td>0.888889</td>\n","      <td>0.777778</td>\n","      <td>0.805556</td>\n","      <td>0.819444</td>\n","      <td>0.763889</td>\n","      <td>0.805556</td>\n","      <td>...</td>\n","      <td>0.194444</td>\n","      <td>0.166667</td>\n","      <td>0.180556</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>0.152778</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>0.888889</td>\n","      <td>0.861111</td>\n","      <td>0.791667</td>\n","      <td>0.805556</td>\n","      <td>0.805556</td>\n","      <td>0.777778</td>\n","      <td>0.805556</td>\n","      <td>0.833333</td>\n","      <td>0.875000</td>\n","      <td>0.861111</td>\n","      <td>...</td>\n","      <td>0.194444</td>\n","      <td>0.194444</td>\n","      <td>0.180556</td>\n","      <td>0.180556</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>0.486486</td>\n","      <td>0.621622</td>\n","      <td>0.797297</td>\n","      <td>0.918919</td>\n","      <td>0.932432</td>\n","      <td>0.905405</td>\n","      <td>0.810811</td>\n","      <td>0.810811</td>\n","      <td>0.824324</td>\n","      <td>0.783784</td>\n","      <td>...</td>\n","      <td>0.202703</td>\n","      <td>0.189189</td>\n","      <td>0.189189</td>\n","      <td>0.189189</td>\n","      <td>0.175676</td>\n","      <td>0.175676</td>\n","      <td>0.162162</td>\n","      <td>0.162162</td>\n","      <td>0.162162</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.791667</td>\n","      <td>0.819444</td>\n","      <td>0.777778</td>\n","      <td>0.833333</td>\n","      <td>0.833333</td>\n","      <td>0.888889</td>\n","      <td>0.875000</td>\n","      <td>0.875000</td>\n","      <td>0.888889</td>\n","      <td>0.875000</td>\n","      <td>...</td>\n","      <td>0.180556</td>\n","      <td>0.180556</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>0.166667</td>\n","      <td>0.152778</td>\n","      <td>0.152778</td>\n","      <td>0.125000</td>\n","      <td>0.125000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>0.932432</td>\n","      <td>0.878378</td>\n","      <td>0.770270</td>\n","      <td>0.783784</td>\n","      <td>0.797297</td>\n","      <td>0.770270</td>\n","      <td>0.824324</td>\n","      <td>0.851351</td>\n","      <td>0.864865</td>\n","      <td>0.878378</td>\n","      <td>...</td>\n","      <td>0.189189</td>\n","      <td>0.189189</td>\n","      <td>0.189189</td>\n","      <td>0.175676</td>\n","      <td>0.175676</td>\n","      <td>0.175676</td>\n","      <td>0.162162</td>\n","      <td>0.162162</td>\n","      <td>0.148649</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.891892</td>\n","      <td>0.810811</td>\n","      <td>0.797297</td>\n","      <td>0.810811</td>\n","      <td>0.783784</td>\n","      <td>0.824324</td>\n","      <td>0.824324</td>\n","      <td>0.878378</td>\n","      <td>0.878378</td>\n","      <td>0.878378</td>\n","      <td>...</td>\n","      <td>0.189189</td>\n","      <td>0.175676</td>\n","      <td>0.175676</td>\n","      <td>0.162162</td>\n","      <td>0.175676</td>\n","      <td>0.162162</td>\n","      <td>0.162162</td>\n","      <td>0.148649</td>\n","      <td>0.162162</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>0.519481</td>\n","      <td>0.675325</td>\n","      <td>0.883117</td>\n","      <td>1.000000</td>\n","      <td>0.935065</td>\n","      <td>0.883117</td>\n","      <td>0.766234</td>\n","      <td>0.779221</td>\n","      <td>0.805195</td>\n","      <td>0.766234</td>\n","      <td>...</td>\n","      <td>0.207792</td>\n","      <td>0.207792</td>\n","      <td>0.207792</td>\n","      <td>0.194805</td>\n","      <td>0.194805</td>\n","      <td>0.181818</td>\n","      <td>0.181818</td>\n","      <td>0.168831</td>\n","      <td>0.168831</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>0.594595</td>\n","      <td>0.797297</td>\n","      <td>0.932432</td>\n","      <td>0.945946</td>\n","      <td>0.918919</td>\n","      <td>0.824324</td>\n","      <td>0.810811</td>\n","      <td>0.837838</td>\n","      <td>0.797297</td>\n","      <td>0.837838</td>\n","      <td>...</td>\n","      <td>0.189189</td>\n","      <td>0.175676</td>\n","      <td>0.175676</td>\n","      <td>0.162162</td>\n","      <td>0.175676</td>\n","      <td>0.162162</td>\n","      <td>0.175676</td>\n","      <td>0.148649</td>\n","      <td>0.162162</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>0.480000</td>\n","      <td>0.613333</td>\n","      <td>0.813333</td>\n","      <td>0.920000</td>\n","      <td>0.933333</td>\n","      <td>0.906667</td>\n","      <td>0.826667</td>\n","      <td>0.826667</td>\n","      <td>0.853333</td>\n","      <td>0.800000</td>\n","      <td>...</td>\n","      <td>0.226667</td>\n","      <td>0.226667</td>\n","      <td>0.213333</td>\n","      <td>0.200000</td>\n","      <td>0.200000</td>\n","      <td>0.200000</td>\n","      <td>0.186667</td>\n","      <td>0.186667</td>\n","      <td>0.173333</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>72 rows × 351 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-355cc3de-b789-4b32-a55b-67a0a3435440')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-355cc3de-b789-4b32-a55b-67a0a3435440 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-355cc3de-b789-4b32-a55b-67a0a3435440');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["fake_005_df = pd.read_csv(fake_005_path, header=None)\n","fake_010_df = pd.read_csv(fake_010_path, header=None)\n","fake_015_df = pd.read_csv(fake_015_path, header=None)\n","fake_020_df = pd.read_csv(fake_020_path, header=None)\n","fake_025_df = pd.read_csv(fake_025_path, header=None)\n","fake_N_df = pd.read_csv(fake_N_path, header=None)"],"metadata":{"id":"YvSBfMOleK_c","executionInfo":{"status":"ok","timestamp":1666706156777,"user_tz":-120,"elapsed":7165,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# fake_df = pd.concat([fake_015_df, fake_020_df, fake_025_df, fake_N_df],axis = 0, ignore_index= True)\n","fake_df = pd.concat([fake_005_df, fake_010_df, fake_015_df, fake_020_df, fake_025_df, fake_N_df],axis = 0, ignore_index= True)\n","fake_df.rename(columns={350: 'target'}, inplace=True)\n","\n","scaler_fake = preprocessing.MinMaxScaler()\n","scaler_fake.fit(fake_df.iloc[:,:-1].T)\n","fake_df.iloc[:,:-1] = scaler_fake.transform(fake_df.iloc[:,:-1].T).T\n","\n","fake_df.reset_index(drop=True)\n","# plt.plot(test_df.iloc[0,:-1])\n","fake_df = fake_df.sample(frac=1.0)\n","fake_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"ksS5r7RueNTN","executionInfo":{"status":"ok","timestamp":1666706156778,"user_tz":-120,"elapsed":13,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"0d17ea80-8fba-4933-8156-a025f32b7e68"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            0         1         2         3         4         5         6  \\\n","79   0.897764  0.889837  0.853631  0.832333  0.858001  0.836220  0.857800   \n","33   0.785090  0.805871  0.845922  0.879961  0.848314  0.862164  0.837731   \n","269  0.890974  0.876288  0.855190  0.852293  0.804551  0.820194  0.821192   \n","266  0.893211  0.869605  0.856893  0.844513  0.797471  0.791977  0.825235   \n","54   0.766463  0.791830  0.817088  0.859983  0.838824  0.846874  0.816623   \n","..        ...       ...       ...       ...       ...       ...       ...   \n","217  0.901207  0.882957  0.863599  0.862008  0.802866  0.824541  0.852591   \n","263  0.899174  0.887185  0.859092  0.856928  0.791990  0.808676  0.812573   \n","154  0.901953  0.885771  0.868305  0.869198  0.822570  0.839603  0.852403   \n","230  0.890398  0.867807  0.848428  0.838001  0.797872  0.820926  0.830027   \n","175  0.893313  0.880508  0.857367  0.843292  0.804555  0.817617  0.833895   \n","\n","            7         8         9  ...       341       342       343  \\\n","79   0.870994  0.907838  0.901762  ...  0.147747  0.129051  0.157602   \n","33   0.869796  0.867199  0.859908  ...  0.167357  0.152765  0.147357   \n","269  0.832408  0.863616  0.882112  ...  0.184525  0.177990  0.175620   \n","266  0.836381  0.866153  0.887763  ...  0.162565  0.151087  0.151062   \n","54   0.839656  0.852187  0.845448  ...  0.152946  0.135486  0.160416   \n","..        ...       ...       ...  ...       ...       ...       ...   \n","217  0.868281  0.891608  0.909818  ...  0.156649  0.149015  0.152387   \n","263  0.827818  0.856625  0.881644  ...  0.189085  0.173746  0.161351   \n","154  0.870386  0.868363  0.889146  ...  0.160776  0.148430  0.167683   \n","230  0.842468  0.859883  0.881769  ...  0.187025  0.160292  0.144625   \n","175  0.840842  0.874910  0.897955  ...  0.179960  0.169750  0.170279   \n","\n","          344       345       346       347       348       349  target  \n","79   0.169891  0.157025  0.151468  0.154502  0.109263  0.139300     0.0  \n","33   0.121319  0.124916  0.116184  0.123788  0.113689  0.137074     0.0  \n","269  0.152444  0.176916  0.172430  0.178365  0.166203  0.149227     1.0  \n","266  0.136839  0.156135  0.144754  0.145470  0.135492  0.132252     1.0  \n","54   0.143124  0.160751  0.145345  0.153873  0.143352  0.156215     0.0  \n","..        ...       ...       ...       ...       ...       ...     ...  \n","217  0.146480  0.155740  0.148825  0.145922  0.126951  0.124786     1.0  \n","263  0.155885  0.155866  0.134206  0.150610  0.132769  0.132892     1.0  \n","154  0.143959  0.163108  0.152124  0.161800  0.131766  0.128216     1.0  \n","230  0.127005  0.128402  0.120042  0.141681  0.135584  0.128688     1.0  \n","175  0.147950  0.166502  0.159245  0.152186  0.145923  0.138503     1.0  \n","\n","[300 rows x 351 columns]"],"text/html":["\n","  <div id=\"df-88b2b5a0-9bf2-4f24-827b-b474715f4867\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>341</th>\n","      <th>342</th>\n","      <th>343</th>\n","      <th>344</th>\n","      <th>345</th>\n","      <th>346</th>\n","      <th>347</th>\n","      <th>348</th>\n","      <th>349</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>79</th>\n","      <td>0.897764</td>\n","      <td>0.889837</td>\n","      <td>0.853631</td>\n","      <td>0.832333</td>\n","      <td>0.858001</td>\n","      <td>0.836220</td>\n","      <td>0.857800</td>\n","      <td>0.870994</td>\n","      <td>0.907838</td>\n","      <td>0.901762</td>\n","      <td>...</td>\n","      <td>0.147747</td>\n","      <td>0.129051</td>\n","      <td>0.157602</td>\n","      <td>0.169891</td>\n","      <td>0.157025</td>\n","      <td>0.151468</td>\n","      <td>0.154502</td>\n","      <td>0.109263</td>\n","      <td>0.139300</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>0.785090</td>\n","      <td>0.805871</td>\n","      <td>0.845922</td>\n","      <td>0.879961</td>\n","      <td>0.848314</td>\n","      <td>0.862164</td>\n","      <td>0.837731</td>\n","      <td>0.869796</td>\n","      <td>0.867199</td>\n","      <td>0.859908</td>\n","      <td>...</td>\n","      <td>0.167357</td>\n","      <td>0.152765</td>\n","      <td>0.147357</td>\n","      <td>0.121319</td>\n","      <td>0.124916</td>\n","      <td>0.116184</td>\n","      <td>0.123788</td>\n","      <td>0.113689</td>\n","      <td>0.137074</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>269</th>\n","      <td>0.890974</td>\n","      <td>0.876288</td>\n","      <td>0.855190</td>\n","      <td>0.852293</td>\n","      <td>0.804551</td>\n","      <td>0.820194</td>\n","      <td>0.821192</td>\n","      <td>0.832408</td>\n","      <td>0.863616</td>\n","      <td>0.882112</td>\n","      <td>...</td>\n","      <td>0.184525</td>\n","      <td>0.177990</td>\n","      <td>0.175620</td>\n","      <td>0.152444</td>\n","      <td>0.176916</td>\n","      <td>0.172430</td>\n","      <td>0.178365</td>\n","      <td>0.166203</td>\n","      <td>0.149227</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>266</th>\n","      <td>0.893211</td>\n","      <td>0.869605</td>\n","      <td>0.856893</td>\n","      <td>0.844513</td>\n","      <td>0.797471</td>\n","      <td>0.791977</td>\n","      <td>0.825235</td>\n","      <td>0.836381</td>\n","      <td>0.866153</td>\n","      <td>0.887763</td>\n","      <td>...</td>\n","      <td>0.162565</td>\n","      <td>0.151087</td>\n","      <td>0.151062</td>\n","      <td>0.136839</td>\n","      <td>0.156135</td>\n","      <td>0.144754</td>\n","      <td>0.145470</td>\n","      <td>0.135492</td>\n","      <td>0.132252</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>0.766463</td>\n","      <td>0.791830</td>\n","      <td>0.817088</td>\n","      <td>0.859983</td>\n","      <td>0.838824</td>\n","      <td>0.846874</td>\n","      <td>0.816623</td>\n","      <td>0.839656</td>\n","      <td>0.852187</td>\n","      <td>0.845448</td>\n","      <td>...</td>\n","      <td>0.152946</td>\n","      <td>0.135486</td>\n","      <td>0.160416</td>\n","      <td>0.143124</td>\n","      <td>0.160751</td>\n","      <td>0.145345</td>\n","      <td>0.153873</td>\n","      <td>0.143352</td>\n","      <td>0.156215</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>217</th>\n","      <td>0.901207</td>\n","      <td>0.882957</td>\n","      <td>0.863599</td>\n","      <td>0.862008</td>\n","      <td>0.802866</td>\n","      <td>0.824541</td>\n","      <td>0.852591</td>\n","      <td>0.868281</td>\n","      <td>0.891608</td>\n","      <td>0.909818</td>\n","      <td>...</td>\n","      <td>0.156649</td>\n","      <td>0.149015</td>\n","      <td>0.152387</td>\n","      <td>0.146480</td>\n","      <td>0.155740</td>\n","      <td>0.148825</td>\n","      <td>0.145922</td>\n","      <td>0.126951</td>\n","      <td>0.124786</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>263</th>\n","      <td>0.899174</td>\n","      <td>0.887185</td>\n","      <td>0.859092</td>\n","      <td>0.856928</td>\n","      <td>0.791990</td>\n","      <td>0.808676</td>\n","      <td>0.812573</td>\n","      <td>0.827818</td>\n","      <td>0.856625</td>\n","      <td>0.881644</td>\n","      <td>...</td>\n","      <td>0.189085</td>\n","      <td>0.173746</td>\n","      <td>0.161351</td>\n","      <td>0.155885</td>\n","      <td>0.155866</td>\n","      <td>0.134206</td>\n","      <td>0.150610</td>\n","      <td>0.132769</td>\n","      <td>0.132892</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>0.901953</td>\n","      <td>0.885771</td>\n","      <td>0.868305</td>\n","      <td>0.869198</td>\n","      <td>0.822570</td>\n","      <td>0.839603</td>\n","      <td>0.852403</td>\n","      <td>0.870386</td>\n","      <td>0.868363</td>\n","      <td>0.889146</td>\n","      <td>...</td>\n","      <td>0.160776</td>\n","      <td>0.148430</td>\n","      <td>0.167683</td>\n","      <td>0.143959</td>\n","      <td>0.163108</td>\n","      <td>0.152124</td>\n","      <td>0.161800</td>\n","      <td>0.131766</td>\n","      <td>0.128216</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>0.890398</td>\n","      <td>0.867807</td>\n","      <td>0.848428</td>\n","      <td>0.838001</td>\n","      <td>0.797872</td>\n","      <td>0.820926</td>\n","      <td>0.830027</td>\n","      <td>0.842468</td>\n","      <td>0.859883</td>\n","      <td>0.881769</td>\n","      <td>...</td>\n","      <td>0.187025</td>\n","      <td>0.160292</td>\n","      <td>0.144625</td>\n","      <td>0.127005</td>\n","      <td>0.128402</td>\n","      <td>0.120042</td>\n","      <td>0.141681</td>\n","      <td>0.135584</td>\n","      <td>0.128688</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>0.893313</td>\n","      <td>0.880508</td>\n","      <td>0.857367</td>\n","      <td>0.843292</td>\n","      <td>0.804555</td>\n","      <td>0.817617</td>\n","      <td>0.833895</td>\n","      <td>0.840842</td>\n","      <td>0.874910</td>\n","      <td>0.897955</td>\n","      <td>...</td>\n","      <td>0.179960</td>\n","      <td>0.169750</td>\n","      <td>0.170279</td>\n","      <td>0.147950</td>\n","      <td>0.166502</td>\n","      <td>0.159245</td>\n","      <td>0.152186</td>\n","      <td>0.145923</td>\n","      <td>0.138503</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>300 rows × 351 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-88b2b5a0-9bf2-4f24-827b-b474715f4867')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-88b2b5a0-9bf2-4f24-827b-b474715f4867 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-88b2b5a0-9bf2-4f24-827b-b474715f4867');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["all_df = pd.concat([real_df, fake_df],axis = 0, ignore_index= True)"],"metadata":{"id":"rz9mSsbvN2lZ","executionInfo":{"status":"ok","timestamp":1666706156779,"user_tz":-120,"elapsed":12,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1666706157308,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"},"user_tz":-120},"id":"ZGp5GD60c7ly","outputId":"c243bbf7-bbae-4bc7-adbc-ea977d39a48a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    60\n","1    12\n","Name: target, dtype: int64"]},"metadata":{},"execution_count":11}],"source":["real_df.target.value_counts()"]},{"cell_type":"code","source":["fake_df.target.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p19_hrM1NTGj","executionInfo":{"status":"ok","timestamp":1666706157309,"user_tz":-120,"elapsed":6,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"575d6766-d294-4287-b1a1-3addda9201d0"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0    150\n","1.0    150\n","Name: target, dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["all_df.target.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O0R7llHeNeZl","executionInfo":{"status":"ok","timestamp":1666706159171,"user_tz":-120,"elapsed":790,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"0bc513dc-334a-41d1-b637-48d2dcf1856a"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0    210\n","1.0    162\n","Name: target, dtype: int64"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":561},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1666706161751,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"},"user_tz":-120},"id":"gVl5zXtidFjX","outputId":"d846f87a-4f61-4798-f67c-2045515d9127"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":736,"height":489}}}],"source":["ax = sns.countplot(all_df.target)\n","ax.set_xticklabels(class_names)\n","for p in ax.patches:\n","   ax.annotate('{:.1f}'.format(p.get_height()), (p.get_x()+0.35, p.get_height()+0.05))\n","\n","plt.show()"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":720},"executionInfo":{"elapsed":1883,"status":"ok","timestamp":1666706167215,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"},"user_tz":-120},"id":"Zfrn4IJydQKH","outputId":"83769795-dded-4ee0-ec8e-309e707d1154"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x720 with 2 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":559,"height":703}}}],"source":["def plot_time_series_class(data, class_name, ax, n_steps=10):\n","  time_series_df = pd.DataFrame(data)\n","\n","  smooth_path = time_series_df.rolling(n_steps).mean()\n","  path_deviation = 2 * time_series_df.rolling(n_steps).std()\n","\n","  under_line = (smooth_path - path_deviation)[0]\n","  over_line = (smooth_path + path_deviation)[0]\n","\n","  ax.plot(smooth_path, linewidth=2)\n","  ax.fill_between(\n","    path_deviation.index,\n","    under_line,\n","    over_line,\n","    alpha=.125\n","  )\n","  ax.set_title(class_name,fontsize=20)\n","\n","\n","classes = real_df.target.unique()\n","\n","fig, axs = plt.subplots(\n","  nrows=2,\n","  ncols=1,\n","  sharey=True,\n","  figsize=(8, 10),\n",")\n","\n","for i, cls in enumerate(classes):\n","  ax = axs.flat[i]\n","  data = real_df[real_df.target == cls] \\\n","    .drop(labels='target', axis=1) \\\n","    .mean(axis=0) \\\n","    .to_numpy()\n","  plot_time_series_class(data, id_to_class[cls], ax)\n","\n","fig.tight_layout();"]},{"cell_type":"code","source":["######################################################\n","#选择要使用real_df, fake_df or all_df\n","# df = real_df\n","df = all_df\n","##############################################\n","\n","left_df = df[df.target == CLASS_LEFT]\n","normal_df = df[df.target == CLASS_NORMAL]\n","\n","train_df, val_df = train_test_split(\n","  df,\n","  test_size=0.15,\n","  random_state=312\n",")\n","\n","_, test_df = train_test_split(\n","  val_df,\n","  test_size=0.33,\n","  random_state=RANDOM_SEED\n",")\n","\n","def create_cycle_dataset(df):\n","  x_values = []\n","  y_values = []\n","  for i in range(len(df)):\n","    x = df.iloc[i,:-1].values\n","    y = df.iloc[i,-1]\n","    x_values.append(x)\n","    y_values.append(y)\n","\n","  x = [torch.tensor(x).unsqueeze(1).float() for x in x_values]\n","  y = [torch.tensor(y).unsqueeze(0).float() for y in y_values]\n","  x = torch.stack(x)\n","  y = torch.stack(y)\n","\n","  n_seq, seq_len, n_features = x.shape\n","  return x, y, seq_len, n_features\n","\n","X, Y, seq_len, n_features = create_cycle_dataset(df)\n","print(X.shape)\n","trainX, trainY, seq_len, n_features = create_cycle_dataset(train_df)\n","print(trainX.shape)\n","valX, valY, _, _ = create_cycle_dataset(val_df)\n","print(valX.shape)\n","testX, testY, _, _ = create_cycle_dataset(test_df)\n","print(testX.shape)\n","\n","test_left_X, test_left_Y, _, _ = create_cycle_dataset(left_df)\n","print(test_left_X.shape)\n","test_normal_X, test_normal_Y, _, _ = create_cycle_dataset(normal_df)\n","print(test_normal_X.shape)"],"metadata":{"id":"a3aIGzP-OzOd","executionInfo":{"status":"ok","timestamp":1666706169830,"user_tz":-120,"elapsed":631,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"666df631-228f-4e51-d31a-c081b5cc6c59"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["torch.Size([372, 350, 1])\n","torch.Size([316, 350, 1])\n","torch.Size([56, 350, 1])\n","torch.Size([19, 350, 1])\n","torch.Size([210, 350, 1])\n","torch.Size([162, 350, 1])\n"]}]},{"cell_type":"code","execution_count":17,"metadata":{"id":"bpDM_woVg7-p","executionInfo":{"status":"ok","timestamp":1666706173463,"user_tz":-120,"elapsed":427,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"outputs":[],"source":["batch_size = 32\n","\n","Dataset = TensorDataset(X, Y)\n","Dataloader = DataLoader(Dataset, batch_size=batch_size, shuffle=True)\n","\n","trainDataset = TensorDataset(trainX, trainY)\n","trainDataloader = DataLoader(trainDataset, batch_size=batch_size, shuffle=True)\n","\n","valDataset = TensorDataset(valX, valY)\n","valDataloader = DataLoader(valDataset, batch_size=batch_size, shuffle=True)\n","\n","testDataset = TensorDataset(testX, testY)\n","testDataloader = DataLoader(testDataset, batch_size=batch_size, shuffle=True)\n","\n","testLeftDataset = TensorDataset(test_left_X, test_left_Y)\n","testLeftDataloader = DataLoader(testLeftDataset, batch_size=batch_size, shuffle=True)\n","\n","testNormalDataset = TensorDataset(test_normal_X, test_normal_Y)\n","testNormalDataloader = DataLoader(testNormalDataset, batch_size=batch_size, shuffle=True)"]},{"cell_type":"code","source":["class Meter:\n","  def __init__(self, n_classes=2):\n","    self.targets = []\n","    self.predictions = []\n","    self.metrics = {}\n","    self.confusion = np.zeros((n_classes, n_classes))\n","\n","  def init_metrics(self):\n","    self.metrics['accuracy'] = 0\n","    self.metrics['f1'] = 0\n","    self.metrics['precision'] = 0\n","    self.metrics['recall'] = 0\n","\n","  def update(self, x, y):\n","    x = np.argmax(x.detach().cpu().numpy(), axis=1)\n","    y = np.argmax(y.detach().cpu().numpy(), axis=1)\n","    self._compute_cm(x, y)\n","\n","    self.targets = np.hstack((self.targets, x))\n","    self.predictions = np.hstack((self.predictions, y)) \n","\n","  def _compute_cm(self, x, y):\n","    for prob, target in zip(x, y):\n","      self.confusion[int(target)][int(prob)] += 1\n","  \n","  def _compute_metric(self):\n","    self.metrics['accuracy'] += round(accuracy_score(self.targets, self.predictions),5)\n","    self.metrics['f1'] += round(f1_score(self.targets, self.predictions,average='macro'),5)\n","    self.metrics['precision'] += round(precision_score(self.targets, self.predictions, average='macro', zero_division=1),5)\n","    self.metrics['recall'] += round(recall_score(self.targets, self.predictions, average='macro', zero_division=1),5)\n","\n","  def _compute_metrics(self, x, y):\n","    self.metrics['accuracy'] += round(accuracy_score(x, y),5)\n","    self.metrics['f1'] += round(f1_score(x, y,average='macro'),5)\n","    self.metrics['precision'] += round(precision_score(x, y, average='macro', zero_division=1),5)\n","    self.metrics['recall'] += round(recall_score(x, y, average='macro', zero_division=1),5)\n","      \n","  def get_metrics(self):\n","    return self.metrics\n","  \n","  def get_accuracy(self):\n","    return self.metrics['accuracy']\n","  \n","  def get_f1(self):\n","    return self.metrics['f1']\n","\n","  def get_precision(self):\n","    return self.metrics['precision']\n","\n","  def get_recall(self):\n","    return self.metrics['recall']\n","    \n","  def get_confusion_matrix(self):\n","    return self.confusion\n","\n","  def plot_confusion_matrix(self, classes=class_names, title='Confusion matrix', cmap='hot'):\n","    disp = ConfusionMatrixDisplay(confusion_matrix=self.confusion, display_labels=real_df.target.unique())\n","    disp.plot(values_format='')\n","    # disp.ax_.set_title(title)\n","    plt.grid(False)\n","    plt.title(title)\n","    plt.show()"],"metadata":{"id":"x7TprFPe-xl1","executionInfo":{"status":"ok","timestamp":1666706182623,"user_tz":-120,"elapsed":2,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["class CNN(nn.Module):\n","  def __init__(\n","    self,\n","    seq_len=350,\n","    input_size=1,\n","    num_classes=2,\n","    \n","    num_kernal=256,\n","    kernel_size=5, \n","    out_features = 576,\n","    dropout_rate = 0.30000000000000004\n","  ):\n","    self.input_size = input_size\n","    self.num_kernal = num_kernal\n","    self.kernel_size = kernel_size\n","    self.num_classes = num_classes\n","    self.dropout_rate = dropout_rate\n","    self.sequence_len = seq_len\n","\n","    self.out_features = out_features\n","    self.in_features = int(((self.sequence_len - self.kernel_size + 1)/2 - self.kernel_size + 1)/2) * self.num_kernal * 2\n","\n","    super().__init__()\n","    self.conv_1 = nn.Conv1d(\n","      in_channels = self.input_size,\n","      out_channels = self.num_kernal,\n","      kernel_size = self.kernel_size,\n","      stride = 1,\n","      padding = 0\n","    )\n","\n","    self.pool = nn.MaxPool1d(kernel_size=2)\n","\n","    self.conv_2 = nn.Conv1d(\n","      in_channels = self.num_kernal,\n","      out_channels = self.num_kernal * 2,\n","      kernel_size = self.kernel_size,\n","      stride = 1,\n","      padding = 0\n","    )\n","    self.dropout = nn.Dropout(self.dropout_rate)\n","    self.relu = torch.nn.ReLU()\n","    self.softmax = torch.nn.Softmax(dim=1)\n","    self.fc_1 = nn.Linear(in_features=self.in_features,out_features=self.out_features)\n","    self.fc_2 = nn.Linear(in_features=self.out_features,out_features=self.num_classes)\n","\n","  def flatten(self, x):\n","    batch_size = x.shape[0]\n","    return x.view(batch_size, -1)\n","\n","  def getFeatures(self, x):\n","    output = x.permute(0,2,1)\n","    output = self.pool(self.relu(self.conv_1(output)))\n","    output = self.pool(self.relu(self.conv_2(output)))\n","    output = self.dropout(self.flatten(output))\n","    features = self.fc_1(output)\n","    # print(features.shape)\n","    return features\n","\n","  def forward(self, x):\n","    # print(x.shape)\n","    output = x.permute(0,2,1)\n","    # print(output.shape)\n","    output = self.pool(self.relu(self.conv_1(output)))\n","    # print(output.shape)\n","    output = self.pool(self.relu(self.conv_2(output)))\n","    # print(output.shape)\n","    output = self.dropout(self.flatten(output))\n","    # print(output.shape)\n","    output = self.relu(self.fc_1(output))\n","    # print(output.shape)\n","    output = self.softmax(self.fc_2(output))\n","    # print(output.shape)\n","    return output"],"metadata":{"id":"_DwZpNAMNsHV","executionInfo":{"status":"ok","timestamp":1666706186521,"user_tz":-120,"elapsed":3,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["num_classes = 2\n","model = CNN().to(device)\n","model"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bKYyHRNqN4xE","executionInfo":{"status":"ok","timestamp":1666706195621,"user_tz":-120,"elapsed":4183,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"3a2b5738-da9e-4800-f409-d46eecb77484"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["CNN(\n","  (conv_1): Conv1d(1, 256, kernel_size=(5,), stride=(1,))\n","  (pool): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","  (conv_2): Conv1d(256, 512, kernel_size=(5,), stride=(1,))\n","  (dropout): Dropout(p=0.30000000000000004, inplace=False)\n","  (relu): ReLU()\n","  (softmax): Softmax(dim=1)\n","  (fc_1): Linear(in_features=43008, out_features=576, bias=True)\n","  (fc_2): Linear(in_features=576, out_features=2, bias=True)\n",")"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["optimizer = torch.optim.Adam(model.parameters(), lr=1e-5)\n","criterion = nn.CrossEntropyLoss().to(device)"],"metadata":{"id":"AhHKOGqTCrq3","executionInfo":{"status":"ok","timestamp":1666706195623,"user_tz":-120,"elapsed":22,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["class CNNTest(nn.Module):\n","  def __init__(\n","    self, \n","    trial,\n","    seq_len=350,\n","    input_size=1,\n","    num_kernal=8,\n","    kernel_size=3,\n","    num_classes=2,\n","    out_features = 512,\n","    dropout_rate = 0.2\n","  ):\n","    self.input_size = input_size\n","    self.num_kernal = trial.suggest_int(\"num_kernal\", 32, 512, step=32)\n","    self.kernel_size = trial.suggest_int(\"kernel_size\", 4, 12, step=1)\n","    self.num_classes = num_classes\n","    self.dropout_rate = trial.suggest_float(\"dropout_rate\", 0.0, 0.5, step=0.1)\n","    self.sequence_len = seq_len\n","    self.out_features = trial.suggest_int(\"out_features\", 256, 1024, step=64)\n","    self.in_features = int(((self.sequence_len - self.kernel_size + 1)/2 - self.kernel_size + 1)/2) * self.num_kernal * 2\n","\n","    super().__init__()\n","    self.conv_1 = nn.Conv1d(\n","      in_channels = self.input_size,\n","      out_channels = self.num_kernal,\n","      kernel_size = self.kernel_size,\n","      stride = 1,\n","      padding = 0\n","    )\n","\n","    self.pool = nn.MaxPool1d(kernel_size=2)\n","\n","    self.conv_2 = nn.Conv1d(\n","      in_channels = self.num_kernal,\n","      out_channels = self.num_kernal * 2,\n","      kernel_size = self.kernel_size,\n","      stride = 1,\n","      padding = 0\n","    )\n","    self.dropout = nn.Dropout(self.dropout_rate)\n","    self.relu = torch.nn.ReLU()\n","    self.softmax = torch.nn.Softmax(dim=1)\n","    self.fc_1 = nn.Linear(in_features=self.in_features,out_features=self.out_features)\n","    self.fc_2 = nn.Linear(in_features=self.out_features,out_features=self.num_classes)\n","\n","  def flatten(self, x):\n","    batch_size = x.shape[0]\n","    return x.view(batch_size, -1)\n","\n","  def getFeatures(self, x):\n","    output = x.permute(0,2,1)\n","    output = self.pool(self.relu(self.conv_1(output)))\n","    output = self.pool(self.relu(self.conv_2(output)))\n","    output = self.dropout(self.flatten(output))\n","    features = self.fc_1(output)\n","    # print(features.shape)\n","    return features\n","\n","  def forward(self, x):\n","    # print(x.shape)\n","    output = x.permute(0,2,1)\n","    # print(output.shape)\n","    output = self.pool(self.relu(self.conv_1(output)))\n","    # print(output.shape)\n","    output = self.pool(self.relu(self.conv_2(output)))\n","    # print(output.shape)\n","    output = self.dropout(self.flatten(output))\n","    # print(output.shape)\n","    output = self.relu(self.fc_1(output))\n","    # print(output.shape)\n","    output = self.softmax(self.fc_2(output))\n","    # print(output.shape)\n","    return output\n","\n","def objective(trial):\n","  # Generate the model.\n","  model = CNNTest(trial).to(device)\n","  # Generate the optimizers.\n","  optimizer_name = trial.suggest_categorical(\"optimizer\", [\"AdamW\", \"RMSprop\", \"SGD\", \"Adam\", \"Adadelta\", \"Adagrad\"])\n","  lr = trial.suggest_float(\"lr\", 1e-5, 1e-1, log=True)\n","  optimizer = getattr(optim, optimizer_name)(model.parameters(), lr=lr)\n","\n","  n_epochs = 100\n","  criterion=nn.CrossEntropyLoss()\n","\n","  # Training of the model.\n","  for epoch in range(1, n_epochs + 1):\n","    meter = Meter()\n","    meter.init_metrics()\n","\n","    model.train()\n","    for id_batch, (x_batch, y_batch) in enumerate(trainDataloader):\n","      # clear the gradients of all optimized variables\n","      optimizer.zero_grad()\n","      x_batch = x_batch.to(device)\n","      y_batch = y_batch.to(device)\n","      temp = torch.zeros([len(y_batch), num_classes]).to(device)\n","      for count, index in enumerate(y_batch):\n","        temp[count, int(index)] = 1\n","      y_batch = temp\n","      # forward pass: compute predicted outputs by passing inputs to the model\n","      y_pred = model(x_batch)\n","      # calculate the loss\n","      loss = criterion(y_pred, y_batch)\n","      # backward pass: compute gradient of the loss with respect to model parameters\n","      loss.backward()\n","      # perform a single optimization step (parameter update)\n","      optimizer.step()\n","\n","    model.eval()\n","    with torch.no_grad():\n","      for id_batch, (x_batch, y_batch) in enumerate(valDataloader):\n","        x_batch = x_batch.to(device)\n","        y_batch = y_batch.to(device)\n","        temp = torch.zeros([len(y_batch), num_classes]).to(device)\n","        for count, index in enumerate(y_batch):\n","          temp[count, int(index)] = 1\n","        y_batch = temp\n","        # forward pass: compute predicted outputs by passing inputs to the model\n","        y_pred = model(x_batch)\n","        meter.update(y_batch, y_pred)\n","\n","    meter._compute_metric()\n","    accuracy = meter.get_accuracy()\n","    # Handle pruning based on the intermediate value.\n","    trial.report(accuracy, epoch)\n","    if trial.should_prune():\n","      raise optuna.exceptions.TrialPruned()\n","\n","  return accuracy "],"metadata":{"id":"W1W0ivnl6Col"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["study = optuna.create_study(direction='maximize')\n","study.optimize(objective, n_trials=100)\n","\n","pruned_trials = study.get_trials(deepcopy=False, states=[TrialState.PRUNED])\n","complete_trials = study.get_trials(deepcopy=False, states=[TrialState.COMPLETE])\n","\n","print(\"Study statistics: \")\n","print(\"  Number of finished trials: \", len(study.trials))\n","print(\"  Number of pruned trials: \", len(pruned_trials))\n","print(\"  Number of complete trials: \", len(complete_trials))\n","\n","print(\"Best trial:\")\n","trial = study.best_trial\n","\n","print(\"  Value: \", trial.value)\n","\n","print(\"  Params: \")\n","for key, value in trial.params.items():\n","    print(\"    {}: {}\".format(key, value))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":752},"id":"a23Qz0oop33P","executionInfo":{"status":"error","timestamp":1657573893825,"user_tz":-120,"elapsed":264383,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"463ed95e-6516-4d2d-d07a-54141e08c5d7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["\u001b[32m[I 2022-07-11 20:52:34,834]\u001b[0m A new study created in memory with name: no-name-0a0fa7a6-6a27-4889-94b8-cc442a4f15fd\u001b[0m\n","\u001b[32m[I 2022-07-11 20:54:51,110]\u001b[0m Trial 0 finished with value: 0.55357 and parameters: {'num_kernal': 352, 'kernel_size': 10, 'dropout_rate': 0.2, 'out_features': 640, 'optimizer': 'AdamW', 'lr': 0.05667586459798516}. Best is trial 0 with value: 0.55357.\u001b[0m\n","\u001b[32m[I 2022-07-11 20:56:52,413]\u001b[0m Trial 1 finished with value: 0.55357 and parameters: {'num_kernal': 512, 'kernel_size': 7, 'dropout_rate': 0.1, 'out_features': 768, 'optimizer': 'SGD', 'lr': 3.245596213840479e-05}. Best is trial 0 with value: 0.55357.\u001b[0m\n","\u001b[32m[I 2022-07-11 20:58:15,615]\u001b[0m Trial 2 finished with value: 0.55357 and parameters: {'num_kernal': 320, 'kernel_size': 4, 'dropout_rate': 0.2, 'out_features': 832, 'optimizer': 'Adagrad', 'lr': 0.004756064873936415}. Best is trial 0 with value: 0.55357.\u001b[0m\n","\u001b[32m[I 2022-07-11 20:58:58,260]\u001b[0m Trial 3 finished with value: 0.55357 and parameters: {'num_kernal': 192, 'kernel_size': 6, 'dropout_rate': 0.30000000000000004, 'out_features': 320, 'optimizer': 'AdamW', 'lr': 0.0008804944949956537}. Best is trial 0 with value: 0.55357.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:00:15,184]\u001b[0m Trial 4 finished with value: 0.55357 and parameters: {'num_kernal': 416, 'kernel_size': 5, 'dropout_rate': 0.2, 'out_features': 256, 'optimizer': 'Adagrad', 'lr': 0.04656349697506176}. Best is trial 0 with value: 0.55357.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:01:37,221]\u001b[0m Trial 5 finished with value: 0.55357 and parameters: {'num_kernal': 384, 'kernel_size': 5, 'dropout_rate': 0.2, 'out_features': 384, 'optimizer': 'RMSprop', 'lr': 0.004173705393028597}. Best is trial 0 with value: 0.55357.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:02:07,568]\u001b[0m Trial 6 finished with value: 1.0 and parameters: {'num_kernal': 96, 'kernel_size': 5, 'dropout_rate': 0.2, 'out_features': 576, 'optimizer': 'RMSprop', 'lr': 6.0843939962910716e-05}. Best is trial 6 with value: 1.0.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:04:08,240]\u001b[0m Trial 7 finished with value: 0.55357 and parameters: {'num_kernal': 384, 'kernel_size': 7, 'dropout_rate': 0.30000000000000004, 'out_features': 704, 'optimizer': 'RMSprop', 'lr': 0.0005704151998482688}. Best is trial 6 with value: 1.0.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:04:55,522]\u001b[0m Trial 8 finished with value: 0.98214 and parameters: {'num_kernal': 224, 'kernel_size': 4, 'dropout_rate': 0.5, 'out_features': 512, 'optimizer': 'RMSprop', 'lr': 4.588948153766873e-05}. Best is trial 6 with value: 1.0.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:07:52,437]\u001b[0m Trial 9 finished with value: 0.55357 and parameters: {'num_kernal': 448, 'kernel_size': 11, 'dropout_rate': 0.5, 'out_features': 832, 'optimizer': 'AdamW', 'lr': 0.00031951677433018493}. Best is trial 6 with value: 1.0.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:07:52,597]\u001b[0m Trial 10 pruned. \u001b[0m\n","\u001b[32m[I 2022-07-11 21:08:29,725]\u001b[0m Trial 11 finished with value: 0.91071 and parameters: {'num_kernal': 160, 'kernel_size': 4, 'dropout_rate': 0.5, 'out_features': 512, 'optimizer': 'RMSprop', 'lr': 1.88319313852344e-05}. Best is trial 6 with value: 1.0.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:08:55,490]\u001b[0m Trial 12 finished with value: 0.98214 and parameters: {'num_kernal': 64, 'kernel_size': 6, 'dropout_rate': 0.4, 'out_features': 512, 'optimizer': 'Adam', 'lr': 8.11331903443345e-05}. Best is trial 6 with value: 1.0.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:09:42,535]\u001b[0m Trial 13 finished with value: 0.91071 and parameters: {'num_kernal': 224, 'kernel_size': 4, 'dropout_rate': 0.4, 'out_features': 512, 'optimizer': 'RMSprop', 'lr': 1.0310162578042892e-05}. Best is trial 6 with value: 1.0.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:09:42,806]\u001b[0m Trial 14 pruned. \u001b[0m\n","\u001b[32m[I 2022-07-11 21:10:51,029]\u001b[0m Trial 15 finished with value: 0.94643 and parameters: {'num_kernal': 288, 'kernel_size': 6, 'dropout_rate': 0.4, 'out_features': 384, 'optimizer': 'Adam', 'lr': 4.192599678657292e-05}. Best is trial 6 with value: 1.0.\u001b[0m\n","\u001b[32m[I 2022-07-11 21:10:51,340]\u001b[0m Trial 16 pruned. \u001b[0m\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-25-ec66a9ebaae3>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mstudy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0moptuna\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_study\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdirection\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'maximize'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mstudy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptimize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobjective\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_trials\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mpruned_trials\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstudy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_trials\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdeepcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstates\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mTrialState\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mPRUNED\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mcomplete_trials\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstudy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_trials\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdeepcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstates\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mTrialState\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mCOMPLETE\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/optuna/study/study.py\u001b[0m in \u001b[0;36moptimize\u001b[0;34m(self, func, n_trials, timeout, n_jobs, catch, callbacks, gc_after_trial, show_progress_bar)\u001b[0m\n\u001b[1;32m    407\u001b[0m             \u001b[0mcallbacks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcallbacks\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m             \u001b[0mgc_after_trial\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mgc_after_trial\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 409\u001b[0;31m             \u001b[0mshow_progress_bar\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mshow_progress_bar\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    410\u001b[0m         )\n\u001b[1;32m    411\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/optuna/study/_optimize.py\u001b[0m in \u001b[0;36m_optimize\u001b[0;34m(study, func, n_trials, timeout, n_jobs, catch, callbacks, gc_after_trial, show_progress_bar)\u001b[0m\n\u001b[1;32m     74\u001b[0m                 \u001b[0mreseed_sampler_rng\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m                 \u001b[0mtime_start\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m                 \u001b[0mprogress_bar\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mprogress_bar\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m             )\n\u001b[1;32m     78\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/optuna/study/_optimize.py\u001b[0m in \u001b[0;36m_optimize_sequential\u001b[0;34m(study, func, n_trials, timeout, catch, callbacks, gc_after_trial, reseed_sampler_rng, time_start, progress_bar)\u001b[0m\n\u001b[1;32m    161\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    162\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 163\u001b[0;31m             \u001b[0mtrial\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_run_trial\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstudy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcatch\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    164\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    165\u001b[0m             \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/optuna/study/_optimize.py\u001b[0m in \u001b[0;36m_run_trial\u001b[0;34m(study, func, catch)\u001b[0m\n\u001b[1;32m    211\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 213\u001b[0;31m         \u001b[0mvalue_or_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrial\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    214\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mexceptions\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTrialPruned\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m         \u001b[0;31m# TODO(mamu): Handle multi-objective cases.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-22-53bc261cb39e>\u001b[0m in \u001b[0;36mobjective\u001b[0;34m(trial)\u001b[0m\n\u001b[1;32m     98\u001b[0m       \u001b[0mtemp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mzeros\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_batch\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_classes\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdevice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     99\u001b[0m       \u001b[0;32mfor\u001b[0m \u001b[0mcount\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_batch\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 100\u001b[0;31m         \u001b[0mtemp\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcount\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    101\u001b[0m       \u001b[0my_batch\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtemp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    102\u001b[0m       \u001b[0;31m# forward pass: compute predicted outputs by passing inputs to the model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["df = study.trials_dataframe().drop(['state','datetime_start','datetime_complete','duration','number'], axis=1)\n","df.tail(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":194},"id":"gjyfF1Nf_7HR","executionInfo":{"status":"error","timestamp":1657573907412,"user_tz":-120,"elapsed":11,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"7ea331a8-e672-4ab0-a8a4-dfdb512d9f64"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-cae3ebe5411d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstudy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrials_dataframe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'state'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'datetime_start'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'datetime_complete'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'duration'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'number'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtail\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'study' is not defined"]}]},{"cell_type":"code","source":["optuna.visualization.plot_optimization_history(study)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"fF-_dNeC_85H","executionInfo":{"status":"ok","timestamp":1657571881157,"user_tz":-120,"elapsed":4,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"44d074d1-cc86-47c8-babd-1e4edd0265cf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"704f4bc6-b739-48cf-b1e4-83be4b34f849\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"704f4bc6-b739-48cf-b1e4-83be4b34f849\")) {                    Plotly.newPlot(                        \"704f4bc6-b739-48cf-b1e4-83be4b34f849\",                        [{\"mode\":\"markers\",\"name\":\"Objective Value\",\"x\":[0,1,2,3,4,5,6,7,8],\"y\":[0.52273,0.52273,1.0,1.0,0.52273,0.52273,0.52273,1.0,1.0],\"type\":\"scatter\"},{\"name\":\"Best Value\",\"x\":[0,1,2,3,4,5,6,7,8],\"y\":[0.52273,0.52273,1.0,1.0,1.0,1.0,1.0,1.0,1.0],\"type\":\"scatter\"}],                        {\"title\":{\"text\":\"Optimization History Plot\"},\"xaxis\":{\"title\":{\"text\":\"#Trials\"}},\"yaxis\":{\"title\":{\"text\":\"Objective Value\"}},\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('704f4bc6-b739-48cf-b1e4-83be4b34f849');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["optuna.visualization.plot_contour(study, params=['kernel_size', 'num_kernal'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"ImHenSTPAXuV","executionInfo":{"status":"ok","timestamp":1657571887253,"user_tz":-120,"elapsed":249,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"de1c4e9d-69e5-45f2-af29-79a65d071246"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"20face18-7faf-4801-ab70-6dd95c88c04c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"20face18-7faf-4801-ab70-6dd95c88c04c\")) {                    Plotly.newPlot(                        \"20face18-7faf-4801-ab70-6dd95c88c04c\",                        [{\"colorbar\":{\"title\":{\"text\":\"Objective Value\"}},\"colorscale\":[[0,\"rgb(5,10,172)\"],[0.35,\"rgb(40,60,190)\"],[0.5,\"rgb(70,100,245)\"],[0.6,\"rgb(90,120,245)\"],[0.7,\"rgb(106,137,247)\"],[1,\"rgb(220,220,220)\"]],\"connectgaps\":true,\"contours\":{\"coloring\":\"heatmap\"},\"hoverinfo\":\"none\",\"line\":{\"smoothing\":1.3},\"reversescale\":false,\"x\":[3.6,4,5,7,10,11,12,12.4],\"y\":[9.599999999999998,32,192,224,256,384,448,480,502.4],\"z\":[[null,null,null,null,null,null,null,null],[null,null,null,null,0.52273,null,null,null],[null,null,null,0.52273,null,null,null,null],[null,null,null,null,null,0.52273,1.0,null],[null,null,1.0,null,null,null,0.52273,null],[null,1.0,null,null,null,null,null,null],[null,null,null,null,0.52273,null,null,null],[null,null,null,1.0,null,null,null,null],[null,null,null,null,null,null,null,null]],\"type\":\"contour\"},{\"marker\":{\"color\":\"black\",\"line\":{\"color\":\"Grey\",\"width\":0.5}},\"mode\":\"markers\",\"showlegend\":false,\"x\":[7,10,5,7,10,12,11,4,12],\"y\":[192,448,256,480,32,256,224,384,224],\"type\":\"scatter\"}],                        {\"title\":{\"text\":\"Contour Plot\"},\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"title\":{\"text\":\"kernel_size\"},\"range\":[3.6,12.4]},\"yaxis\":{\"title\":{\"text\":\"num_kernal\"},\"range\":[9.599999999999998,502.4]}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('20face18-7faf-4801-ab70-6dd95c88c04c');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["optuna.visualization.plot_contour(study, params=['lr', 'out_features'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"UTH3IMOcAi6B","executionInfo":{"status":"ok","timestamp":1657571889232,"user_tz":-120,"elapsed":253,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"5d6bb53d-9161-4d36-ba34-05f2f6eb6a60"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"b82f8a05-6ebe-4901-a69a-12d1963b8606\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"b82f8a05-6ebe-4901-a69a-12d1963b8606\")) {                    Plotly.newPlot(                        \"b82f8a05-6ebe-4901-a69a-12d1963b8606\",                        [{\"colorbar\":{\"title\":{\"text\":\"Objective Value\"}},\"colorscale\":[[0,\"rgb(5,10,172)\"],[0.35,\"rgb(40,60,190)\"],[0.5,\"rgb(70,100,245)\"],[0.6,\"rgb(90,120,245)\"],[0.7,\"rgb(106,137,247)\"],[1,\"rgb(220,220,220)\"]],\"connectgaps\":true,\"contours\":{\"coloring\":\"heatmap\"},\"hoverinfo\":\"none\",\"line\":{\"smoothing\":1.3},\"reversescale\":false,\"x\":[7.138285286090932e-05,9.966550515476643e-05,0.00010355706944052139,0.00023220047122681704,0.00035039007972579016,0.020335733817812948,0.04849841605842562,0.05287000840188461,0.06729372166578133,0.07898857925417319,0.11028470196006386],\"y\":[428.8,448,576,640,704,832,851.2],\"z\":[[null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,0.52273,null,0.52273,0.52273,null,null],[null,null,1.0,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,0.52273,null],[null,null,null,null,1.0,null,0.52273,null,null,null,null],[null,1.0,null,1.0,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null]],\"type\":\"contour\"},{\"marker\":{\"color\":\"black\",\"line\":{\"color\":\"Grey\",\"width\":0.5}},\"mode\":\"markers\",\"showlegend\":false,\"x\":[0.05287000840188461,0.020335733817812948,0.00010355706944052139,9.966550515476643e-05,0.07898857925417319,0.06729372166578133,0.04849841605842562,0.00023220047122681704,0.00035039007972579016],\"y\":[448,448,576,832,640,448,704,832,704],\"type\":\"scatter\"}],                        {\"title\":{\"text\":\"Contour Plot\"},\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"title\":{\"text\":\"lr\"},\"range\":[-4.1464060991795755,-0.95748472613737],\"type\":\"log\"},\"yaxis\":{\"title\":{\"text\":\"out_features\"},\"range\":[428.8,851.2]}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('b82f8a05-6ebe-4901-a69a-12d1963b8606');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["optuna.visualization.plot_parallel_coordinate(study)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"gMDOaZyL_9C7","executionInfo":{"status":"ok","timestamp":1657571897309,"user_tz":-120,"elapsed":1055,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"d3b8d605-4b5b-4fa7-c0d5-bbc7ddb1a30f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"793978ed-122d-45b6-b460-133b7e074f38\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"793978ed-122d-45b6-b460-133b7e074f38\")) {                    Plotly.newPlot(                        \"793978ed-122d-45b6-b460-133b7e074f38\",                        [{\"dimensions\":[{\"label\":\"Objective Value\",\"range\":[0.52273,1.0],\"values\":[0.52273,0.52273,1.0,1.0,0.52273,0.52273,0.52273,1.0,1.0]},{\"label\":\"dropout_rate\",\"range\":[0.0,0.5],\"values\":[0.1,0.5,0.30000000000000004,0.5,0.0,0.2,0.2,0.1,0.1]},{\"label\":\"kernel_size\",\"range\":[4,12],\"values\":[7,10,5,7,10,12,11,4,12]},{\"label\":\"lr\",\"range\":[-4.001455127677657,-1.1024356976392884],\"ticktext\":[\"9.97e-05\",\"0.0001\",\"0.001\",\"0.01\",\"0.079\"],\"tickvals\":[-4.001455127677657,-4,-3,-2,-1.1024356976392884],\"values\":[-1.2767906205785875,-1.691740151399213,-3.9848202481543025,-4.001455127677657,-1.1024356976392884,-1.172025452463948,-1.314272445074407,-3.6341369032408615,-3.455448198112794]},{\"label\":\"num_kernal\",\"range\":[32,480],\"values\":[192,448,256,480,32,256,224,384,224]},{\"label\":\"optimizer\",\"range\":[0,2],\"ticktext\":[\"Adam\",\"AdamW\",\"Adagrad\"],\"tickvals\":[0,1,2],\"values\":[0,1,0,2,0,0,0,0,2]},{\"label\":\"out_features\",\"range\":[448,832],\"values\":[448,448,576,832,640,448,704,832,704]}],\"labelangle\":30,\"labelside\":\"bottom\",\"line\":{\"color\":[0.52273,0.52273,1.0,1.0,0.52273,0.52273,0.52273,1.0,1.0],\"colorbar\":{\"title\":{\"text\":\"Objective Value\"}},\"colorscale\":[[0.0,\"rgb(247,251,255)\"],[0.125,\"rgb(222,235,247)\"],[0.25,\"rgb(198,219,239)\"],[0.375,\"rgb(158,202,225)\"],[0.5,\"rgb(107,174,214)\"],[0.625,\"rgb(66,146,198)\"],[0.75,\"rgb(33,113,181)\"],[0.875,\"rgb(8,81,156)\"],[1.0,\"rgb(8,48,107)\"]],\"reversescale\":false,\"showscale\":true},\"type\":\"parcoords\"}],                        {\"title\":{\"text\":\"Parallel Coordinate Plot\"},\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('793978ed-122d-45b6-b460-133b7e074f38');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["optuna.visualization.plot_param_importances(study)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"yJMJjEEL_9Kp","executionInfo":{"status":"ok","timestamp":1657571901403,"user_tz":-120,"elapsed":666,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"0cecd113-2395-44c6-d04e-5a9615bb4bed"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"faf17f63-9f5b-4ef5-9a3b-73523b23d7c9\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"faf17f63-9f5b-4ef5-9a3b-73523b23d7c9\")) {                    Plotly.newPlot(                        \"faf17f63-9f5b-4ef5-9a3b-73523b23d7c9\",                        [{\"cliponaxis\":false,\"hovertemplate\":[\"dropout_rate (DiscreteUniformDistribution): 0.0<extra></extra>\",\"kernel_size (IntUniformDistribution): 0.046875<extra></extra>\",\"out_features (IntUniformDistribution): 0.046875<extra></extra>\",\"num_kernal (IntUniformDistribution): 0.09375<extra></extra>\",\"optimizer (CategoricalDistribution): 0.09375<extra></extra>\",\"lr (LogUniformDistribution): 0.71875<extra></extra>\"],\"marker\":{\"color\":\"rgb(66,146,198)\"},\"orientation\":\"h\",\"text\":[\"0.0\",\"0.046875\",\"0.046875\",\"0.09375\",\"0.09375\",\"0.71875\"],\"textposition\":\"outside\",\"texttemplate\":\"%{text:.2f}\",\"x\":[0.0,0.046875,0.046875,0.09375,0.09375,0.71875],\"y\":[\"dropout_rate\",\"kernel_size\",\"out_features\",\"num_kernal\",\"optimizer\",\"lr\"],\"type\":\"bar\"}],                        {\"showlegend\":false,\"title\":{\"text\":\"Hyperparameter Importances\"},\"xaxis\":{\"title\":{\"text\":\"Importance for Objective Value\"}},\"yaxis\":{\"title\":{\"text\":\"Hyperparameter\"}},\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('faf17f63-9f5b-4ef5-9a3b-73523b23d7c9');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","execution_count":22,"metadata":{"id":"CTpmfLt9he1J","executionInfo":{"status":"ok","timestamp":1666706206231,"user_tz":-120,"elapsed":424,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"outputs":[],"source":["def train_model(model, train_dataset, val_dataset, n_epochs, patience):\n","  # to track the average training loss and validation loss per epoch as the model trains\n","  history = dict(train=[], val=[])\n","  # to save the current best model states\n","  best_model_wts = copy.deepcopy(model.state_dict())\n","  best_loss = 10000.0\n","\n","  # initialize the early_stopping object\n","  early_stopping = EarlyStopping(patience=patience, verbose=True)\n","\n","  for epoch in range(1, n_epochs + 1):\n","    # initialize the evaluation metrics(confusion matrix, accurary f1......)\n","    train_meter = Meter()\n","    val_meter = Meter()\n","    train_meter.init_metrics()\n","    val_meter.init_metrics()\n","\n","    ###################\n","    # train the model #\n","    ###################\n","    model = model.train()\n","    train_losses = []\n","    for id_batch, (x_batch, y_batch) in enumerate(trainDataloader):\n","      # clear the gradients of all optimized variables\n","      optimizer.zero_grad()\n","      x_batch = x_batch.to(device)\n","      y_batch = y_batch.to(device)\n","      temp = torch.zeros([len(y_batch), num_classes]).to(device)\n","      for count, index in enumerate(y_batch):\n","        temp[count, int(index)] = 1\n","      y_batch = temp\n","      # forward pass: compute predicted outputs by passing inputs to the model\n","      y_pred = model(x_batch)\n","      # calculate the loss\n","      loss = criterion(y_pred, y_batch)\n","      # backward pass: compute gradient of the loss with respect to model parameters\n","      loss.backward()\n","      # perform a single optimization step (parameter update)\n","      optimizer.step()\n","      # record training loss\n","      loss = loss.item()\n","      # meter.update(y_batch, y_pred)\n","      train_losses.append(loss)\n","\n","      train_meter.update(y_batch, y_pred)    \n","\n","    ######################    \n","    # validate the model #\n","    ######################\n","    model = model.eval()\n","    val_losses = []\n","    with torch.no_grad():\n","      for id_batch, (x_batch, y_batch) in enumerate(valDataloader):\n","        x_batch = x_batch.to(device)\n","        y_batch = y_batch.to(device)\n","        temp = torch.zeros([len(y_batch), num_classes]).to(device)\n","        for count, index in enumerate(y_batch):\n","          temp[count, int(index)] = 1\n","        y_batch = temp\n","        # forward pass: compute predicted outputs by passing inputs to the model\n","        y_pred = model(x_batch)\n","        #  calculate the loss\n","        loss = criterion(y_pred, y_batch)\n","        # record validation loss\n","        loss = loss.item()\n","        val_losses.append(loss)\n","\n","        val_meter.update(y_batch, y_pred)\n","\n","    train_meter._compute_metric()\n","    val_meter._compute_metric()\n","    \n","    if epoch % 10 == 0:\n","      train_meter.plot_confusion_matrix(classes=class_names, title='train')\n","      print(train_meter.get_metrics())\n","\n","      val_meter.plot_confusion_matrix(classes=class_names, title='validation')\n","      print(val_meter.get_metrics())\n","      # print(meter.get_accuracy())\n","\n","    # calculate average loss over an epoch\n","    train_loss = np.mean(train_losses)\n","    val_loss = np.mean(val_losses)\n","\n","    history['train'].append(train_loss)\n","    history['val'].append(val_loss)\n","\n","    # early_stopping needs the validation loss to check if it has decresed, \n","    # and if it has, it will make a checkpoint of the current model\n","    early_stopping(val_loss, model)\n","    if early_stopping.early_stop:\n","      print(\"Early stopping\")\n","      break\n","\n","    if val_loss < best_loss:\n","      best_loss = val_loss\n","      best_model_wts = copy.deepcopy(model.state_dict())\n","\n","    print(f'Epoch: {epoch} train loss {train_loss} val loss {val_loss}')\n","\n","  model.load_state_dict(best_model_wts)\n","  return model.eval(), history"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":2093,"status":"error","timestamp":1658682257077,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"},"user_tz":-120},"id":"-hABoAHphmF7","outputId":"2c440fe1-180e-42bf-8d5b-bc30456f11d8"},"outputs":[{"output_type":"stream","name":"stdout","text":["torch.Size([32, 1, 350])\n","torch.Size([32, 256, 173])\n","torch.Size([32, 512, 84])\n","torch.Size([32, 43008])\n","torch.Size([32, 576])\n","torch.Size([32, 2])\n","torch.Size([32, 1, 350])\n","torch.Size([32, 256, 173])\n","torch.Size([32, 512, 84])\n","torch.Size([32, 43008])\n","torch.Size([32, 576])\n","torch.Size([32, 2])\n","torch.Size([32, 1, 350])\n","torch.Size([32, 256, 173])\n","torch.Size([32, 512, 84])\n","torch.Size([32, 43008])\n","torch.Size([32, 576])\n","torch.Size([32, 2])\n","torch.Size([32, 1, 350])\n","torch.Size([32, 256, 173])\n","torch.Size([32, 512, 84])\n","torch.Size([32, 43008])\n","torch.Size([32, 576])\n","torch.Size([32, 2])\n","torch.Size([32, 1, 350])\n","torch.Size([32, 256, 173])\n","torch.Size([32, 512, 84])\n","torch.Size([32, 43008])\n","torch.Size([32, 576])\n","torch.Size([32, 2])\n","torch.Size([32, 1, 350])\n","torch.Size([32, 256, 173])\n","torch.Size([32, 512, 84])\n","torch.Size([32, 43008])\n","torch.Size([32, 576])\n","torch.Size([32, 2])\n","torch.Size([32, 1, 350])\n","torch.Size([32, 256, 173])\n","torch.Size([32, 512, 84])\n","torch.Size([32, 43008])\n","torch.Size([32, 576])\n","torch.Size([32, 2])\n","torch.Size([32, 1, 350])\n","torch.Size([32, 256, 173])\n","torch.Size([32, 512, 84])\n","torch.Size([32, 43008])\n","torch.Size([32, 576])\n","torch.Size([32, 2])\n","torch.Size([32, 1, 350])\n","torch.Size([32, 256, 173])\n","torch.Size([32, 512, 84])\n","torch.Size([32, 43008])\n","torch.Size([32, 576])\n","torch.Size([32, 2])\n","torch.Size([28, 1, 350])\n","torch.Size([28, 256, 173])\n","torch.Size([28, 512, 84])\n","torch.Size([28, 43008])\n","torch.Size([28, 576])\n","torch.Size([28, 2])\n","torch.Size([32, 1, 350])\n","torch.Size([32, 256, 173])\n","torch.Size([32, 512, 84])\n","torch.Size([32, 43008])\n","torch.Size([32, 576])\n","torch.Size([32, 2])\n","torch.Size([24, 1, 350])\n","torch.Size([24, 256, 173])\n","torch.Size([24, 512, 84])\n","torch.Size([24, 43008])\n","torch.Size([24, 576])\n","torch.Size([24, 2])\n","Validation loss decreased (inf --> 0.692850).  Saving model ...\n"]},{"output_type":"error","ename":"RuntimeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/serialization.py\u001b[0m in \u001b[0;36msave\u001b[0;34m(obj, f, pickle_module, pickle_protocol, _use_new_zipfile_serialization)\u001b[0m\n\u001b[1;32m    378\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0m_open_zipfile_writer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopened_file\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mopened_zipfile\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 379\u001b[0;31m                 \u001b[0m_save\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mopened_zipfile\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpickle_module\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpickle_protocol\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    380\u001b[0m                 \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/serialization.py\u001b[0m in \u001b[0;36m_save\u001b[0;34m(obj, zip_file, pickle_module, pickle_protocol)\u001b[0m\n\u001b[1;32m    603\u001b[0m         \u001b[0mnum_bytes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstorage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnbytes\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 604\u001b[0;31m         \u001b[0mzip_file\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite_record\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstorage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata_ptr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_bytes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    605\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: ","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-27-2048747aded2>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m   \u001b[0mvalX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m   \u001b[0mn_epochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mn_epochs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m   \u001b[0mpatience\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpatience\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m )\n","\u001b[0;32m<ipython-input-25-82a94548bb93>\u001b[0m in \u001b[0;36mtrain_model\u001b[0;34m(model, train_dataset, val_dataset, n_epochs, patience)\u001b[0m\n\u001b[1;32m     79\u001b[0m     \u001b[0;31m# early_stopping needs the validation loss to check if it has decresed,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m     \u001b[0;31m# and if it has, it will make a checkpoint of the current model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m     \u001b[0mearly_stopping\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mval_loss\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mearly_stopping\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mearly_stop\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m       \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Early stopping\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-4-61fd287a8cae>\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, val_loss, model)\u001b[0m\n\u001b[1;32m     30\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_score\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_score\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mscore\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 32\u001b[0;31m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msave_checkpoint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mval_loss\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     33\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mscore\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_score\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelta\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     34\u001b[0m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcounter\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-4-61fd287a8cae>\u001b[0m in \u001b[0;36msave_checkpoint\u001b[0;34m(self, val_loss, model)\u001b[0m\n\u001b[1;32m     45\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mverbose\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrace_func\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf'Validation loss decreased ({self.val_loss_min:.6f} --> {val_loss:.6f}).  Saving model ...'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 47\u001b[0;31m     \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstate_dict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     48\u001b[0m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mval_loss_min\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mval_loss\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/serialization.py\u001b[0m in \u001b[0;36msave\u001b[0;34m(obj, f, pickle_module, pickle_protocol, _use_new_zipfile_serialization)\u001b[0m\n\u001b[1;32m    378\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0m_open_zipfile_writer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopened_file\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mopened_zipfile\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    379\u001b[0m                 \u001b[0m_save\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mopened_zipfile\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpickle_module\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpickle_protocol\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 380\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    381\u001b[0m         \u001b[0m_legacy_save\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mopened_file\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpickle_module\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpickle_protocol\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    382\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/serialization.py\u001b[0m in \u001b[0;36m__exit__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m    257\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    258\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__exit__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 259\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfile_like\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite_end_of_file\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    260\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuffer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflush\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    261\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mRuntimeError\u001b[0m: [enforce fail at inline_container.cc:319] . unexpected pos 2631040 vs 2630992"]}],"source":["model = CNN().to(device)\n","\n","# number of epochs.\n","n_epochs=500\n","\n","# early stopping patience; how long to wait after last time validation loss improved.\n","patience = 50\n","\n","model, history = train_model(\n","  model, \n","  trainX,\n","  valX,\n","  n_epochs=n_epochs,\n","  patience=patience\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"executionInfo":{"elapsed":1168,"status":"ok","timestamp":1657571934463,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"},"user_tz":-120},"id":"ON_MdUqfx82O","outputId":"28ea67e5-72c9-4982-c34d-9c8beba886e0"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":749,"height":506}}}],"source":["ax = plt.figure().gca()\n","\n","ax.plot(history['train'])\n","ax.plot(history['val'])\n","\n","plt.ylabel('Loss')\n","plt.xlabel('Epoch')\n","plt.legend(['train', 'validation'])\n","plt.title('Loss over training epochs')\n","plt.show();"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"aFHUiC3oyBLx","executionInfo":{"status":"error","timestamp":1666706281088,"user_tz":-120,"elapsed":420,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"colab":{"base_uri":"https://localhost:8080/","height":384},"outputId":"ab95411a-7d39-43ba-949e-da6f9ed4ffc9"},"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-26-fdce2401db8c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mMODEL_PATH\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'cnn_svm_all_005_025.pth'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mMODEL_PATH\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# torch.save(model, MODEL_PATH)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/serialization.py\u001b[0m in \u001b[0;36mload\u001b[0;34m(f, map_location, pickle_module, **pickle_load_args)\u001b[0m\n\u001b[1;32m    697\u001b[0m         \u001b[0mpickle_load_args\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'encoding'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'utf-8'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    698\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 699\u001b[0;31m     \u001b[0;32mwith\u001b[0m \u001b[0m_open_file_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'rb'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mopened_file\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    700\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0m_is_zipfile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopened_file\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    701\u001b[0m             \u001b[0;31m# The zipfile reader is going to advance the current file position.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/serialization.py\u001b[0m in \u001b[0;36m_open_file_like\u001b[0;34m(name_or_buffer, mode)\u001b[0m\n\u001b[1;32m    228\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0m_open_file_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    229\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0m_is_path\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname_or_buffer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 230\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_open_file\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    231\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    232\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;34m'w'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/serialization.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, name, mode)\u001b[0m\n\u001b[1;32m    209\u001b[0m \u001b[0;32mclass\u001b[0m \u001b[0m_open_file\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_opener\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 211\u001b[0;31m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_open_file\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    213\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__exit__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'cnn_svm_all_005_025.pth'"]}],"source":["# MODEL_PATH = '../checkpoint/cnn_svm_real_015_025.pth'\n","# MODEL_PATH = '../checkpoint/cnn_svm_all_015_025.pth'\n","\n","# MODEL_PATH = '../checkpoint/cnn_svm_real_005_025.pth'\n","MODEL_PATH = '../checkpoint/cnn_svm_all_005_025.pth'\n","\n","model = torch.load(MODEL_PATH)\n","model.eval()\n","# torch.save(model, MODEL_PATH)"]},{"cell_type":"code","source":["def load_checkpoint(modelpath = MODEL_PATH):\n","  model = CNN(input_size=n_features, num_classes=num_classes, kernel_size=3, num_kernal=8, out_features = 512, dropout_rate = 0.2).to(device)\n","  checkpoint = torch.load(modelpath)\n","  model.load_state_dict(checkpoint)\n","  for parameter in model.parameters():\n","    parameter.requires_grad = False\n","  model.eval()\n","  return model"],"metadata":{"id":"dvcXx-j2syGO","executionInfo":{"status":"ok","timestamp":1666706292964,"user_tz":-120,"elapsed":530,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["def prepare_feature(model, dataloader=Dataloader):\n","  features = []\n","  targets = []\n","  for id_batch, (x_batch, y_batch) in enumerate(dataloader):\n","    x_batch = x_batch.to(device)\n","    x_batch = model.getFeatures(x_batch).cpu().detach().numpy()\n","    y_batch = y_batch.cpu().numpy().ravel()\n","    if id_batch == 0:\n","      features = x_batch\n","      targets = y_batch\n","    else:\n","      features = np.vstack((features,x_batch))\n","      targets = np.append(targets,y_batch)\n","  return features, targets\n","\n","def show_pivot_table(classifierType, classifier):\n","  if classifierType == 'svm':\n","    table = pd.pivot_table(\n","      pd.DataFrame(classifier.cv_results_),\n","      values='mean_test_score', \n","      index='param_C', \n","      columns='param_kernel')   \n","    sns.heatmap(table)\n","  elif classifierType == 'randomForest' or classifierType == 'extraTree':\n","    table = pd.pivot_table(\n","      pd.DataFrame(classifier.cv_results_),\n","      values='mean_test_score', \n","      index='param_n_estimators', \n","      columns='param_criterion')   \n","    sns.heatmap(table)\n","    plt.show()\n","\n","# for ploting the 3d interactive plots\n","def show_3d_result(search_space, classifier):\n","  df = pd.DataFrame.from_dict(classifier.cv_results_)\n","  df['param_min_samples_leaf'] = df['param_min_samples_leaf'].astype(float)\n","  df['param_n_estimators'] = df['param_n_estimators'].astype(float)\n","  df['param_min_samples_split'] = df['param_min_samples_split'].astype(float)\n","  df['mean_fit_time'] = df['mean_fit_time'].astype(float)\n","  df['mean_test_score'] = df['mean_test_score'].astype(float)\n","\n","  text = list(\n","    zip(\n","      'max_features: ' + df['param_max_features'].apply(str),\n","      'n_estimators: ' + df['param_n_estimators'].apply(str),\n","      'min_samples_split: ' + df['param_min_samples_split'].apply(str),\n","      'Test score: ' + df['mean_test_score'].round(3).apply(str),\n","      'Training time: ' + (df['mean_fit_time'] % 60).round(3).apply(str) + ' s',\n","    )\n","  )\n","\n","  hower_text = ['<br>'.join(i) for i in text]\n","  df['hover_text'] = hower_text\n","\n","  trace = go.Scatter3d(\n","    x= df['param_n_estimators'],\n","    y= df['param_min_samples_leaf'],\n","    z= df['param_min_samples_split'],\n","    mode='markers', \n","    marker=dict(\n","      size= 3,\n","      color= df['mean_test_score'],\n","      colorscale= 'Jet',\n","      colorbar= dict(title = 'Cross-Validation Accuracy')\n","    ),\n","    text= df['hover_text'],\n","    hoverinfo= 'text'\n","  )\n","\n","  data = [trace]\n","  layout = go.Layout(\n","    scene = dict(\n","      camera = dict(\n","        up=dict(x=0, y=0, z=1),\n","        center=dict(x=0, y=0, z=0),\n","        eye=dict(x=2, y=2, z=1.25)\n","      ),\n","      xaxis = dict(\n","        title='n_estimators',\n","        range=[min(df['param_n_estimators']), max(df['param_n_estimators'])]\n","      ),\n","      yaxis = dict(\n","        title='min_leaf',\n","        type='log'\n","      ),\n","      zaxis = dict(\n","        title='min_split',\n","        type='log'\n","      ),\n","    ),\n","  )\n","  fig = go.FigureWidget(data,layout)\n","  display(fig)\n","\n","def classifier_predict(model, classifier, Dataloader):\n","  features, targets = prepare_feature(model, Dataloader)\n","  predictions = classifier.predict(features)\n","\n","  print(confusion_matrix(targets, predictions))\n","  print(classification_report(targets, predictions))\n","\n","  meter = Meter()\n","  meter.init_metrics()\n","  meter._compute_cm(targets, predictions)\n","  meter._compute_metrics(targets, predictions)\n","  meter.plot_confusion_matrix(classes=class_names, title=str(classifier))\n","  print(meter.get_metrics())"],"metadata":{"id":"wKabZkBisye9","executionInfo":{"status":"ok","timestamp":1666706299245,"user_tz":-120,"elapsed":492,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["def classifier_training(classifierType, model, Dataloader):\n","  features, targets = prepare_feature(model, Dataloader)\n","  \n","  # mlp classifier\n","  if classifierType == 'mlp':\n","    classifier = MLPClassifier()\n","\n","  # K-neighbors classifier\n","  elif classifierType == 'kNeighbor':\n","    classifier = KNeighborsClassifier(n_neighbors = 2, n_jobs = -1)\n","\n","  # svm classifier\n","  elif classifierType == 'svm':\n","    # parameters = {\n","    #   'kernel': ('linear', 'rbf',  'sigmoid'), \n","    #   'C': list(np.linspace(1, 10000, 1000, dtype = int))}\n","    # svc = SVC()\n","    # classifier = GridSearchCV(svc, parameters)\n","    # classifier.fit(features, targets)\n","    # # show best estimator\n","    # best_estimator = classifier.best_estimator_\n","    # print(best_estimator)\n","\n","    # # show 2d pivot table\n","    # show_pivot_table(classifierType, classifier)\n","\n","    # # show confusion matrix\n","    # predictions = classifier.best_estimator_.predict(features)\n","    # print(confusion_matrix(targets, predictions))\n","    # # show classification report\n","    # print(classification_report(targets, predictions))\n","\n","    # # best 015-025\n","    # classifier = SVC(C=243, kernel='linear')\n","\n","    # best 005-025\n","    classifier = SVC(C=1, kernel='linear')\n","\n","\n","  # random forest classifier\n","  elif classifierType == 'randomForest':\n","    # # do random search\n","    # random_search = {\n","    #   'criterion': ['entropy', 'gini'],\n","    #   'max_depth': list(np.linspace(10, 1200, 20, dtype = int)) + [None],\n","    #   'max_features': ['auto', 'sqrt','log2', None],\n","    #   'min_samples_leaf': [2, 4, 6, 8, 12],\n","    #   'min_samples_split': [3, 5, 7, 10, 14],\n","    #   'n_estimators': list(np.linspace(10, 1000, 20, dtype = int))}\n","    # clf = RandomForestClassifier()\n","    # classifier = RandomizedSearchCV(estimator = clf, param_distributions = random_search, n_iter = 100, \n","    #                  cv = 4, verbose= 5, random_state= 101, n_jobs = -1)\n","    # classifier.fit(features, targets)\n","\n","    # # show best estimator\n","    # best_estimator = classifier.best_estimator_\n","    # print(best_estimator)\n","\n","    # # show 2d pivot table\n","    # show_pivot_table(classifierType, classifier)\n","    # # show 3d interactive plot\n","    # show_3d_result(random_search, classifier)\n","    # # show confusion matrix\n","    # predictions = classifier.best_estimator_.predict(features)\n","    # print(confusion_matrix(targets, predictions))\n","    # # show classification report\n","    # print(classification_report(targets, predictions))\n","\n","    # # do grid search\n","    # grid_search = {\n","    #   'criterion': [classifier.best_params_['criterion']],\n","    #   'max_depth': [classifier.best_params_['max_depth']],\n","    #   'max_features': [classifier.best_params_['max_features']],\n","    #   'min_samples_leaf': [classifier.best_params_['min_samples_leaf'] - 1, \n","    #             classifier.best_params_['min_samples_leaf'], \n","    #             classifier.best_params_['min_samples_leaf'] + 1],\n","    #   'min_samples_split': [classifier.best_params_['min_samples_split'] - 1, \n","    #             classifier.best_params_['min_samples_split'], \n","    #             classifier.best_params_['min_samples_split'] + 1],\n","    #   'n_estimators': [classifier.best_params_['n_estimators'] - 5, \n","    #           classifier.best_params_['n_estimators'] - 10, \n","    #           classifier.best_params_['n_estimators'], \n","    #           classifier.best_params_['n_estimators'] + 5, \n","    #           classifier.best_params_['n_estimators'] + 10]\n","    # }\n","    # clf = RandomForestClassifier()\n","    # classifier = GridSearchCV(estimator = clf, param_grid = grid_search, \n","    #             cv = 4, verbose= 5, n_jobs = -1)\n","    # classifier.fit(features, targets)\n","\n","    # # show best estimator\n","    # best_estimator = classifier.best_estimator_\n","    # print(best_estimator)\n","\n","    # # show 2d pivot table\n","    # show_pivot_table(classifierType, classifier)\n","    # # show 3d interactive plot\n","    # show_3d_result(grid_search, classifier)\n","    # # show confusion matrix\n","    # predictions = classifier.best_estimator_.predict(features)\n","    # print(confusion_matrix(targets, predictions))\n","    # # show classification report\n","    # print(classification_report(targets, predictions))\n","    \n","    # best best 015-025\n","    # classifier = RandomForestClassifier(criterion='entropy', max_depth=835, max_features=None,\n","    #                    min_samples_leaf=2, min_samples_split=7,\n","    #                    n_estimators=10)\n","    # best 005-025\n","    classifier = RandomForestClassifier(max_depth=72, max_features=None, min_samples_leaf=12,\n","                       min_samples_split=3, n_estimators=1000)\n","\n","  # extra trees classifier\n","  elif classifierType == 'extraTree':\n","    # random_search = {\n","    #   'criterion': ['entropy', 'gini'],\n","    #   'max_depth': list(np.linspace(10, 1200, 20, dtype = int)) + [None],\n","    #   'max_features': ['auto', 'sqrt','log2', None],\n","    #   'min_samples_leaf': [2, 4, 6, 8, 12],\n","    #   'min_samples_split': [3, 5, 7, 10, 14],\n","    #   'n_estimators': list(np.linspace(10, 1000, 20, dtype = int))}\n","    # clf = ExtraTreesClassifier()\n","    # classifier = RandomizedSearchCV(estimator = clf, param_distributions = random_search, n_iter = 100, \n","    #                             cv = 4, verbose= 5, random_state= 101, n_jobs = -1)\n","    # classifier.fit(features, targets)\n","\n","    # # show best estimator\n","    # best_estimator = classifier.best_estimator_\n","    # print(best_estimator)\n","\n","    # # show 2d pivot table\n","    # show_pivot_table(classifierType, classifier)\n","    # # show 3d interactive plot\n","    # show_3d_result(random_search, classifier)\n","    # # show confusion matrix\n","    # predictions = classifier.best_estimator_.predict(features)\n","    # print(confusion_matrix(targets, predictions))\n","    # # show classification report\n","    # print(classification_report(targets, predictions))\n","\n","    # grid_search = {\n","    #   'criterion': [classifier.best_params_['criterion']],\n","    #   'max_depth': [classifier.best_params_['max_depth']],\n","    #   'max_features': [classifier.best_params_['max_features']],\n","    #   'min_samples_leaf': [classifier.best_params_['min_samples_leaf'] - 1, \n","    #             classifier.best_params_['min_samples_leaf'], \n","    #             classifier.best_params_['min_samples_leaf'] + 1],\n","    #   'min_samples_split': [classifier.best_params_['min_samples_split'] - 1, \n","    #             classifier.best_params_['min_samples_split'], \n","    #             classifier.best_params_['min_samples_split'] + 1],\n","    #   'n_estimators': [classifier.best_params_['n_estimators'] - 5, \n","    #           classifier.best_params_['n_estimators'] - 10, \n","    #           classifier.best_params_['n_estimators'], \n","    #           classifier.best_params_['n_estimators'] + 5, \n","    #           classifier.best_params_['n_estimators'] + 10]\n","    # }\n","    # clf = ExtraTreesClassifier()\n","    # classifier = GridSearchCV(estimator = clf, param_grid = grid_search, \n","    #             cv = 4, verbose= 5, n_jobs = -1)\n","    # classifier.fit(features, targets)\n","\n","    # # show best estimator\n","    # best_estimator = classifier.best_estimator_\n","    # print(best_estimator)\n","\n","    # # show 2d pivot table\n","    # show_pivot_table(classifierType, classifier)\n","    # # show 3d interactive plot\n","    # show_3d_result(grid_search, classifier)\n","    # # show confusion matrix\n","    # predictions = classifier.best_estimator_.predict(features)\n","    # print(confusion_matrix(targets, predictions))\n","    # # show classification report\n","    # print(classification_report(targets, predictions))\n","    \n","    # best 015-025\n","    # classifier = ExtraTreesClassifier(n_jobs= -1,  n_estimators=100, \n","    #                   criterion='gini', min_samples_split=10, \n","    #                   max_features=50, max_depth=40, min_samples_leaf=4)\n","    # best 005-025\n","    classifier = ExtraTreesClassifier(max_depth=72, max_features=None, min_samples_leaf=11,\n","                     n_estimators=995)\n","  classifier.fit(features, targets)\n","  return classifier"],"metadata":{"id":"rG6Ng-QH0CEx","executionInfo":{"status":"ok","timestamp":1666706310409,"user_tz":-120,"elapsed":757,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["# classifier = classifier_training('mlp', model, trainDataloader)\n","# classifier = classifier_training('kNeighbor', model, trainDataloader)\n","# classifier = classifier_training('svm', model, trainDataloader)\n","# classifier = classifier_training('randomForest', model, trainDataloader)\n","classifier = classifier_training('extraTree', model, trainDataloader)"],"metadata":{"id":"OLnKfgesvH8I","executionInfo":{"status":"ok","timestamp":1666706351825,"user_tz":-120,"elapsed":12525,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["classifier_predict(model, classifier, trainDataloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":748},"id":"g7wo0AGVUkhr","executionInfo":{"status":"ok","timestamp":1666706355144,"user_tz":-120,"elapsed":1224,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"b58512c7-3841-4549-9896-31998b2e80a0"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["[[153  26]\n"," [113  24]]\n","              precision    recall  f1-score   support\n","\n","         0.0       0.58      0.85      0.69       179\n","         1.0       0.48      0.18      0.26       137\n","\n","    accuracy                           0.56       316\n","   macro avg       0.53      0.51      0.47       316\n","weighted avg       0.53      0.56      0.50       316\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":615,"height":523}}},{"output_type":"stream","name":"stdout","text":["{'accuracy': 0.56013, 'f1': 0.47216, 'precision': 0.52759, 'recall': 0.51497}\n"]}]},{"cell_type":"code","source":["classifier_predict(model, classifier, valDataloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":748},"id":"Y9trzOnfANM5","executionInfo":{"status":"ok","timestamp":1666706371642,"user_tz":-120,"elapsed":1293,"user":{"displayName":"Qi Zheng","userId":"09290969562239580215"}},"outputId":"d12d0d21-3b56-40fb-9f1e-6e8d73823c84"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["[[29  2]\n"," [18  7]]\n","              precision    recall  f1-score   support\n","\n","         0.0       0.62      0.94      0.74        31\n","         1.0       0.78      0.28      0.41        25\n","\n","    accuracy                           0.64        56\n","   macro avg       0.70      0.61      0.58        56\n","weighted avg       0.69      0.64      0.60        56\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":606,"height":523}}},{"output_type":"stream","name":"stdout","text":["{'accuracy': 0.64286, 'f1': 0.57768, 'precision': 0.6974, 'recall': 0.60774}\n"]}]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[{"file_id":"1yeHn9_FWnyCX23vNPiUu_j4ierrCyyoz","timestamp":1654420361366}],"collapsed_sections":[],"mount_file_id":"1XfmfzT9ROmu1k73RbsLsruyE0sB4ZGBz","authorship_tag":"ABX9TyN5+yPUYm3fbKE9jhCJPaaV"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}